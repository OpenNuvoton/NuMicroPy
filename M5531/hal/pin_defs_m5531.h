/*
 * This file is part of the MicroPython project, http://micropython.org/
 *
 * The MIT License (MIT)
 *
 * Copyright (c) 2013, 2014 Damien P. George
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
// This file contains pin definitions that are specific to the m48x port.
// This file should only ever be #included by pin.h and not directly.

#include "NuMicro.h"
#include "gpio_reg.h"

enum {
    PORT_A,
    PORT_B,
    PORT_C,
    PORT_D,
    PORT_E,
    PORT_F,
    PORT_G,
    PORT_H,
    PORT_I,
    PORT_J,
    PORT_END,
};

enum {
    AF_FN_OPA,
    AF_FN_ACMP,
    AF_FN_EADC,
    AF_FN_LPADC,
    AF_FN_SPIM,
    AF_FN_EBI,
    AF_FN_QSPI,
    AF_FN_EMAC,
    AF_FN_SPI,
    AF_FN_LPSPI,
    AF_FN_SD,
    AF_FN_SC,
    AF_FN_UART,
    AF_FN_LPUART,
    AF_FN_I2C,
    AF_FN_LPI2C,
    AF_FN_I3C,
    AF_FN_CAN,
    AF_FN_ECAP,
    AF_FN_TAMPER,
    AF_FN_ETM,
    AF_FN_BPWM,
    AF_FN_EPWM,
    AF_FN_EQEI,
    AF_FN_TM,
    AF_FN_LPTM,
    AF_FN_USB,
    AF_FN_HSUSB,
    AF_FN_DAC,
    AF_FN_INT,
    AF_FN_I2S,
    AF_FN_KPI,
    AF_FN_CCAP,
    AF_FN_DMIC,
    AF_FN_PSIO,
    AF_FN_CANFD,
    //AF_FN_USCI,
};

enum {
    AF_PIN_TYPE_OPA_P = 0,
    AF_PIN_TYPE_OPA_N,
    AF_PIN_TYPE_OPA_O,

    AF_PIN_TYPE_ACMP_WLAT = 0,
    AF_PIN_TYPE_ACMP_P0,
    AF_PIN_TYPE_ACMP_P1,
    AF_PIN_TYPE_ACMP_P2,
    AF_PIN_TYPE_ACMP_P3,
    AF_PIN_TYPE_ACMP_N,
    AF_PIN_TYPE_ACMP_O,

    AF_PIN_TYPE_EADC_CH0 = 0,
    AF_PIN_TYPE_EADC_CH1,
    AF_PIN_TYPE_EADC_CH2,
    AF_PIN_TYPE_EADC_CH3,
    AF_PIN_TYPE_EADC_CH4,
    AF_PIN_TYPE_EADC_CH5,
    AF_PIN_TYPE_EADC_CH6,
    AF_PIN_TYPE_EADC_CH7,
    AF_PIN_TYPE_EADC_CH8,
    AF_PIN_TYPE_EADC_CH9,
    AF_PIN_TYPE_EADC_CH10,
    AF_PIN_TYPE_EADC_CH11,
    AF_PIN_TYPE_EADC_CH12,
    AF_PIN_TYPE_EADC_CH13,
    AF_PIN_TYPE_EADC_CH14,
    AF_PIN_TYPE_EADC_CH15,
    AF_PIN_TYPE_EADC_CH16,
    AF_PIN_TYPE_EADC_CH17,
    AF_PIN_TYPE_EADC_CH18,
    AF_PIN_TYPE_EADC_CH19,
    AF_PIN_TYPE_EADC_CH20,
    AF_PIN_TYPE_EADC_CH21,
    AF_PIN_TYPE_EADC_CH22,
    AF_PIN_TYPE_EADC_CH23,
    AF_PIN_TYPE_EADC_ST,

    AF_PIN_TYPE_LPADC_CH0 = 0,
    AF_PIN_TYPE_LPADC_CH1,
    AF_PIN_TYPE_LPADC_CH2,
    AF_PIN_TYPE_LPADC_CH3,
    AF_PIN_TYPE_LPADC_CH4,
    AF_PIN_TYPE_LPADC_CH5,
    AF_PIN_TYPE_LPADC_CH6,
    AF_PIN_TYPE_LPADC_CH7,
    AF_PIN_TYPE_LPADC_CH8,
    AF_PIN_TYPE_LPADC_CH9,
    AF_PIN_TYPE_LPADC_CH10,
    AF_PIN_TYPE_LPADC_CH11,
    AF_PIN_TYPE_LPADC_CH12,
    AF_PIN_TYPE_LPADC_CH13,
    AF_PIN_TYPE_LPADC_CH14,
    AF_PIN_TYPE_LPADC_CH15,
    AF_PIN_TYPE_LPADC_CH16,
    AF_PIN_TYPE_LPADC_CH17,
    AF_PIN_TYPE_LPADC_CH18,
    AF_PIN_TYPE_LPADC_CH19,
    AF_PIN_TYPE_LPADC_CH20,
    AF_PIN_TYPE_LPADC_CH21,
    AF_PIN_TYPE_LPADC_CH22,
    AF_PIN_TYPE_LPADC_CH23,
    AF_PIN_TYPE_LPADC_ST,

    AF_PIN_TYPE_SPIM_MOSI = 0,
    AF_PIN_TYPE_SPIM_MISO,
    AF_PIN_TYPE_SPIM_CLK,
    AF_PIN_TYPE_SPIM_SS,
    AF_PIN_TYPE_SPIM_D2,
    AF_PIN_TYPE_SPIM_D3,

    AF_PIN_TYPE_EBI_ADR0 = 0,
    AF_PIN_TYPE_EBI_ADR1,
    AF_PIN_TYPE_EBI_ADR2,
    AF_PIN_TYPE_EBI_ADR3,
    AF_PIN_TYPE_EBI_ADR4,
    AF_PIN_TYPE_EBI_ADR5,
    AF_PIN_TYPE_EBI_ADR6,
    AF_PIN_TYPE_EBI_ADR7,
    AF_PIN_TYPE_EBI_ADR8,
    AF_PIN_TYPE_EBI_ADR9,
    AF_PIN_TYPE_EBI_ADR10,
    AF_PIN_TYPE_EBI_ADR11,
    AF_PIN_TYPE_EBI_ADR12,
    AF_PIN_TYPE_EBI_ADR13,
    AF_PIN_TYPE_EBI_ADR14,
    AF_PIN_TYPE_EBI_ADR15,
    AF_PIN_TYPE_EBI_ADR16,
    AF_PIN_TYPE_EBI_ADR17,
    AF_PIN_TYPE_EBI_ADR18,
    AF_PIN_TYPE_EBI_ADR19,
    AF_PIN_TYPE_EBI_AD0,
    AF_PIN_TYPE_EBI_AD1,
    AF_PIN_TYPE_EBI_AD2,
    AF_PIN_TYPE_EBI_AD3,
    AF_PIN_TYPE_EBI_AD4,
    AF_PIN_TYPE_EBI_AD5,
    AF_PIN_TYPE_EBI_AD6,
    AF_PIN_TYPE_EBI_AD7,
    AF_PIN_TYPE_EBI_AD8,
    AF_PIN_TYPE_EBI_AD9,
    AF_PIN_TYPE_EBI_AD10,
    AF_PIN_TYPE_EBI_AD11,
    AF_PIN_TYPE_EBI_AD12,
    AF_PIN_TYPE_EBI_AD13,
    AF_PIN_TYPE_EBI_AD14,
    AF_PIN_TYPE_EBI_AD15,
    AF_PIN_TYPE_EBI_ALE,
    AF_PIN_TYPE_EBI_MCLK,
    AF_PIN_TYPE_EBI_nWR,
    AF_PIN_TYPE_EBI_nRD,
    AF_PIN_TYPE_EBI_nWRH,
    AF_PIN_TYPE_EBI_nWRL,
    AF_PIN_TYPE_EBI_nCS0,
    AF_PIN_TYPE_EBI_nCS1,
    AF_PIN_TYPE_EBI_nCS2,

    AF_PIN_TYPE_QSPI_MOSI0 = 0,
    AF_PIN_TYPE_QSPI_MISO0,
    AF_PIN_TYPE_QSPI_MOSI1,
    AF_PIN_TYPE_QSPI_MISO1,
    AF_PIN_TYPE_QSPI_CLK,
    AF_PIN_TYPE_QSPI_SS,

    AF_PIN_TYPE_EMAC_RMII_REFCLK = 0,
    AF_PIN_TYPE_EMAC_RMII_RXERR,
    AF_PIN_TYPE_EMAC_RMII_CRSDV,
    AF_PIN_TYPE_EMAC_PPS,
    AF_PIN_TYPE_EMAC_RMII_RXD0,
    AF_PIN_TYPE_EMAC_RMII_RXD1,
    AF_PIN_TYPE_EMAC_RMII_TXEN,
    AF_PIN_TYPE_EMAC_RMII_TXD0,
    AF_PIN_TYPE_EMAC_RMII_TXD1,
    AF_PIN_TYPE_EMAC_RMII_MDC,
    AF_PIN_TYPE_EMAC_RMII_MDIO,

    AF_PIN_TYPE_SPI_MOSI = 0,
    AF_PIN_TYPE_SPI_MISO,
    AF_PIN_TYPE_SPI_CLK,
    AF_PIN_TYPE_SPI_SS,
    AF_PIN_TYPE_SPI_I2SMCLK,

    AF_PIN_TYPE_LPSPI_MOSI = 0,
    AF_PIN_TYPE_LPSPI_MISO,
    AF_PIN_TYPE_LPSPI_CLK,
    AF_PIN_TYPE_LPSPI_SS,

    AF_PIN_TYPE_SD_DAT0 = 0,
    AF_PIN_TYPE_SD_DAT1,
    AF_PIN_TYPE_SD_DAT2,
    AF_PIN_TYPE_SD_DAT3,
    AF_PIN_TYPE_SD_CLK,
    AF_PIN_TYPE_SD_CMD,
    AF_PIN_TYPE_SD_nCD,

    AF_PIN_TYPE_SC_CLK = 0,
    AF_PIN_TYPE_SC_DAT,
    AF_PIN_TYPE_SC_RST,
    AF_PIN_TYPE_SC_PWR,
    AF_PIN_TYPE_SC_nCD,

    AF_PIN_TYPE_UART_RXD = 0,
    AF_PIN_TYPE_UART_nRTS,
    AF_PIN_TYPE_UART_TXD,
    AF_PIN_TYPE_UART_nCTS,

    AF_PIN_TYPE_LPUART_RXD = 0,
    AF_PIN_TYPE_LPUART_nRTS,
    AF_PIN_TYPE_LPUART_TXD,
    AF_PIN_TYPE_LPUART_nCTS,

    AF_PIN_TYPE_I2C_SDA = 0,
    AF_PIN_TYPE_I2C_SCL,
    AF_PIN_TYPE_I2C_SMBSUS,
    AF_PIN_TYPE_I2C_SMBAL,

    AF_PIN_TYPE_LPI2C_SDA = 0,
    AF_PIN_TYPE_LPI2C_SCL,

    AF_PIN_TYPE_I3C_SDA = 0,
    AF_PIN_TYPE_I3C_SCL,
    AF_PIN_TYPE_I3C_PUPEN,

    AF_PIN_TYPE_CAN_RXD = 0,
    AF_PIN_TYPE_CAN_TXD,

    AF_PIN_TYPE_ECAP_IC0 = 0,
    AF_PIN_TYPE_ECAP_IC1,
    AF_PIN_TYPE_ECAP_IC2,

    AF_PIN_TYPE_TAMPER_TAMPER = 0,

    AF_PIN_TYPE_ETM_TRACE_CLK = 0,
    AF_PIN_TYPE_ETM_TRACE_DATA0,
    AF_PIN_TYPE_ETM_TRACE_DATA1,
    AF_PIN_TYPE_ETM_TRACE_DATA2,
    AF_PIN_TYPE_ETM_TRACE_DATA3,

    AF_PIN_TYPE_BPWM_CH0 = 0,
    AF_PIN_TYPE_BPWM_CH1,
    AF_PIN_TYPE_BPWM_CH2,
    AF_PIN_TYPE_BPWM_CH3,
    AF_PIN_TYPE_BPWM_CH4,
    AF_PIN_TYPE_BPWM_CH5,

    AF_PIN_TYPE_EPWM_CH0 = 0,
    AF_PIN_TYPE_EPWM_CH1,
    AF_PIN_TYPE_EPWM_CH2,
    AF_PIN_TYPE_EPWM_CH3,
    AF_PIN_TYPE_EPWM_CH4,
    AF_PIN_TYPE_EPWM_CH5,
    AF_PIN_TYPE_EPWM_SYNC_OUT,
    AF_PIN_TYPE_EPWM_SYNC_IN,
    AF_PIN_TYPE_EPWM_BRAKE0,
    AF_PIN_TYPE_EPWM_BRAKE1,

    AF_PIN_TYPE_EQEI_A = 0,
    AF_PIN_TYPE_EQEI_B,
    AF_PIN_TYPE_EQEI_INDEX,

    AF_PIN_TYPE_TM_TM = 0,
    AF_PIN_TYPE_TM_EXT,
    AF_PIN_TYPE_TM_INDEX,

    AF_PIN_TYPE_LPTM_LPTM = 0,
    AF_PIN_TYPE_LPTM_EXT,

    AF_PIN_TYPE_USB_VBUS = 0,
    AF_PIN_TYPE_USB_D_N,
    AF_PIN_TYPE_USB_D_P,
    AF_PIN_TYPE_USB_OTG_ID,
    AF_PIN_TYPE_USB_VBUS_EN,
    AF_PIN_TYPE_USB_VBUS_ST,

    AF_PIN_TYPE_HSUSB_VBUS_EN = 0,
    AF_PIN_TYPE_HSUSB_VBUS_ST,

    AF_PIN_TYPE_DAC_ST = 0,
    AF_PIN_TYPE_DAC_OUT,

    AF_PIN_TYPE_INT_INT = 0,

    AF_PIN_TYPE_SWDH_DAT = 0,
    AF_PIN_TYPE_SWDH_CLK,

    AF_PIN_TYPE_I2S_BCLK = 0,
    AF_PIN_TYPE_I2S_MCLK,
    AF_PIN_TYPE_I2S_DI,
    AF_PIN_TYPE_I2S_DO,
    AF_PIN_TYPE_I2S_LRCK,

    AF_PIN_TYPE_KPI_COL0 = 0,
    AF_PIN_TYPE_KPI_COL1,
    AF_PIN_TYPE_KPI_COL2,
    AF_PIN_TYPE_KPI_COL3,
    AF_PIN_TYPE_KPI_COL4,
    AF_PIN_TYPE_KPI_COL5,
    AF_PIN_TYPE_KPI_COL6,
    AF_PIN_TYPE_KPI_COL7,
    AF_PIN_TYPE_KPI_ROW0,
    AF_PIN_TYPE_KPI_ROW1,
    AF_PIN_TYPE_KPI_ROW2,
    AF_PIN_TYPE_KPI_ROW3,
    AF_PIN_TYPE_KPI_ROW4,
    AF_PIN_TYPE_KPI_ROW5,

    AF_PIN_TYPE_CCAP_HSYNC = 0,
    AF_PIN_TYPE_CCAP_VSYNC,
    AF_PIN_TYPE_CCAP_SCLK,
    AF_PIN_TYPE_CCAP_PIXCLK,
    AF_PIN_TYPE_CCAP_SFIELD,
    AF_PIN_TYPE_CCAP_DATA0,
    AF_PIN_TYPE_CCAP_DATA1,
    AF_PIN_TYPE_CCAP_DATA2,
    AF_PIN_TYPE_CCAP_DATA3,
    AF_PIN_TYPE_CCAP_DATA4,
    AF_PIN_TYPE_CCAP_DATA5,
    AF_PIN_TYPE_CCAP_DATA6,
    AF_PIN_TYPE_CCAP_DATA7,

    AF_PIN_TYPE_DMIC_CH0_CLK = 0,
    AF_PIN_TYPE_DMIC_CH0_DAT,
    AF_PIN_TYPE_DMIC_CH0_CLKLP,
    AF_PIN_TYPE_DMIC_CH1_CLK,
    AF_PIN_TYPE_DMIC_CH1_DAT,

    AF_PIN_TYPE_PSIO_CH0 = 0,
    AF_PIN_TYPE_PSIO_CH1,
    AF_PIN_TYPE_PSIO_CH2,
    AF_PIN_TYPE_PSIO_CH3,
    AF_PIN_TYPE_PSIO_CH4,
    AF_PIN_TYPE_PSIO_CH5,
    AF_PIN_TYPE_PSIO_CH6,
    AF_PIN_TYPE_PSIO_CH7,

    AF_PIN_TYPE_CANFD_RXD = 0,
    AF_PIN_TYPE_CANFD_TXD,

    //AF_PIN_TYPE_USCI_CLK = 0,
    //AF_PIN_TYPE_USCI_CTL0,
    //AF_PIN_TYPE_USCI_CTL1,
    //AF_PIN_TYPE_USCI_DAT0,
    //AF_PIN_TYPE_USCI_DAT1,
};

#define SD0 SDH0
#define SD1 SDH1

#define OPA0 OPA

#define EBI0 EBI

#define ACMP0 ACMP01
#define ACMP1 ACMP01
#define ACMP2 ACMP23
#define ACMP3 ACMP23

#define EMAC0 ((void *)EMAC0_BASE)

#define KPI0 KPI

#define TM0 TIMER0
#define TM1 TIMER1
#define TM2 TIMER2
#define TM3 TIMER3

#define LPTM0 LPTMR0
#define LPTM1 LPTMR1


#define CAN0 CANFD0
#define CAN1 CANFD1
#define CAN2 CANFD2
#define CAN3 CANFD3

#define USB0 USBD
#define HSUSB0 HSUSBD

#define CCAP0 CCAP

#define PSIO0 PSIO

#define INT0 SYS
#define INT1 SYS
#define INT2 SYS
#define INT3 SYS
#define INT4 SYS
#define INT5 SYS
#define INT6 SYS
#define INT7 SYS

//#define USCI0 USCI


#if 0
#define TAMPER5 RTC

enum {
    PIN_EADC1  = (1 << 0),
    PIN_EADC2  = (1 << 1),
    PIN_EADC3  = (1 << 2),
};
#endif

typedef GPIO_T pin_gpio_t;

#define GPIO_MODE_AF_PP          0x4UL
#define GPIO_MODE_AF_OD          0x5UL

#define SYS_GPD_MFP1_PD6MFP_EBI0_AD5		SYS_GPD_MFP1_PD6MFP_EBI_AD5
#define SYS_GPB_MFP3_PB12MFP_EBI0_AD11		SYS_GPB_MFP3_PB12MFP_EBI_AD11
#define SYS_GPB_MFP3_PB13MFP_EBI0_AD14		SYS_GPB_MFP3_PB13MFP_EBI_AD14
#define SYS_GPD_MFP1_PD5MFP_EBI0_AD15		SYS_GPD_MFP1_PD5MFP_EBI_AD15
#define SYS_GPB_MFP3_PB12MFP_EBI0_AD15		SYS_GPB_MFP3_PB12MFP_EBI_AD15
#define SYS_GPB_MFP1_PB5MFP_EBI0_ADR0		SYS_GPB_MFP1_PB5MFP_EBI_ADR0
#define SYS_GPB_MFP1_PB4MFP_EBI0_ADR1		SYS_GPB_MFP1_PB4MFP_EBI_ADR1
#define SYS_GPB_MFP0_PB3MFP_EBI0_ADR2		SYS_GPB_MFP0_PB3MFP_EBI_ADR2
#define SYS_GPH_MFP1_PH4MFP_EBI0_ADR3		SYS_GPH_MFP1_PH4MFP_EBI_ADR3
#define SYS_GPB_MFP0_PB2MFP_EBI0_ADR3		SYS_GPB_MFP0_PB2MFP_EBI_ADR3
#define SYS_GPC_MFP3_PC12MFP_EBI0_ADR4		SYS_GPC_MFP3_PC12MFP_EBI_ADR4
#define SYS_GPH_MFP0_PH3MFP_EBI0_ADR4		SYS_GPH_MFP0_PH3MFP_EBI_ADR4
#define SYS_GPC_MFP2_PC11MFP_EBI0_ADR5		SYS_GPC_MFP2_PC11MFP_EBI_ADR5
#define SYS_GPH_MFP0_PH2MFP_EBI0_ADR5		SYS_GPH_MFP0_PH2MFP_EBI_ADR5
#define SYS_GPH_MFP0_PH1MFP_EBI0_ADR6		SYS_GPH_MFP0_PH1MFP_EBI_ADR6
#define SYS_GPC_MFP2_PC10MFP_EBI0_ADR6		SYS_GPC_MFP2_PC10MFP_EBI_ADR6
#define SYS_GPC_MFP2_PC9MFP_EBI0_ADR7		SYS_GPC_MFP2_PC9MFP_EBI_ADR7
#define SYS_GPB_MFP0_PB1MFP_EBI0_ADR8		SYS_GPB_MFP0_PB1MFP_EBI_ADR8
#define SYS_GPG_MFP0_PG0MFP_EBI0_ADR8		SYS_GPG_MFP0_PG0MFP_EBI_ADR8
#define SYS_GPB_MFP0_PB0MFP_EBI0_ADR9		SYS_GPB_MFP0_PB0MFP_EBI_ADR9
#define SYS_GPG_MFP0_PG1MFP_EBI0_ADR9		SYS_GPG_MFP0_PG1MFP_EBI_ADR9
#define SYS_GPB_MFP2_PB8MFP_EBI0_ADR19		SYS_GPB_MFP2_PB8MFP_EBI_ADR19
#define SYS_GPB_MFP2_PB9MFP_EBI0_ADR18		SYS_GPB_MFP2_PB9MFP_EBI_ADR18
#define SYS_GPB_MFP1_PB6MFP_EBI0_nWRH		SYS_GPB_MFP1_PB6MFP_EBI_nWRH
#define SYS_GPB_MFP1_PB6MFP_EBI0_nCS1		SYS_GPB_MFP1_PB6MFP_EBI_nCS1
#define SYS_GPB_MFP1_PB7MFP_EBI0_nWRL		SYS_GPB_MFP1_PB7MFP_EBI_nWRL
#define SYS_GPA_MFP2_PA10MFP_EBI0_nWR		SYS_GPA_MFP2_PA10MFP_EBI_nWR
#define SYS_GPB_MFP1_PB7MFP_EBI0_nCS0		SYS_GPB_MFP1_PB7MFP_EBI_nCS0
#define SYS_GPD_MFP1_PD5MFP_EBI0_nCS0		SYS_GPD_MFP1_PD5MFP_EBI_nCS0
#define SYS_GPA_MFP2_PA8MFP_EBI0_ALE		SYS_GPA_MFP2_PA8MFP_EBI_ALE
#define SYS_GPJ_MFP2_PJ11MFP_EBI0_ALE		SYS_GPJ_MFP2_PJ11MFP_EBI_ALE
#define SYS_GPA_MFP2_PA9MFP_EBI0_MCLK		SYS_GPA_MFP2_PA9MFP_EBI_MCLK
#define SYS_GPJ_MFP2_PJ10MFP_EBI0_MCLK		SYS_GPJ_MFP2_PJ10MFP_EBI_MCLK
#define SYS_GPA_MFP2_PA11MFP_EBI0_nRD		SYS_GPA_MFP2_PA11MFP_EBI_nRD

#define SYS_GPB_MFP0_PB3MFP_KPI0_ROW0		SYS_GPB_MFP0_PB3MFP_KPI_ROW0
#define SYS_GPB_MFP0_PB2MFP_KPI0_ROW1		SYS_GPB_MFP0_PB2MFP_KPI_ROW1
#define SYS_GPB_MFP0_PB1MFP_KPI0_ROW2		SYS_GPB_MFP0_PB1MFP_KPI_ROW2
#define SYS_GPB_MFP0_PB0MFP_KPI0_ROW3		SYS_GPB_MFP0_PB0MFP_KPI_ROW3
#define SYS_GPA_MFP2_PA11MFP_KPI0_ROW4		SYS_GPA_MFP2_PA11MFP_KPI_ROW4
#define SYS_GPA_MFP2_PA10MFP_KPI0_ROW5		SYS_GPA_MFP2_PA10MFP_KPI_ROW5
#define SYS_GPB_MFP3_PB13MFP_KPI0_COL2		SYS_GPB_MFP3_PB13MFP_KPI_COL2
#define SYS_GPB_MFP3_PB12MFP_KPI0_COL3		SYS_GPB_MFP3_PB12MFP_KPI_COL3
#define SYS_GPB_MFP1_PB7MFP_KPI0_COL4		SYS_GPB_MFP1_PB7MFP_KPI_COL4
#define SYS_GPB_MFP1_PB6MFP_KPI0_COL5		SYS_GPB_MFP1_PB6MFP_KPI_COL5
#define SYS_GPB_MFP1_PB5MFP_KPI0_COL6		SYS_GPB_MFP1_PB5MFP_KPI_COL6
#define SYS_GPB_MFP1_PB4MFP_KPI0_COL7		SYS_GPB_MFP1_PB4MFP_KPI_COL7

#define SYS_GPB_MFP1_PB5MFP_INT0_INT		SYS_GPB_MFP1_PB5MFP_INT0
#define SYS_GPB_MFP1_PB4MFP_INT1_INT		SYS_GPB_MFP1_PB4MFP_INT1
#define SYS_GPB_MFP0_PB3MFP_INT2_INT		SYS_GPB_MFP0_PB3MFP_INT2
#define SYS_GPB_MFP0_PB2MFP_INT3_INT		SYS_GPB_MFP0_PB2MFP_INT3
#define SYS_GPA_MFP2_PA8MFP_INT4_INT		SYS_GPA_MFP2_PA8MFP_INT4
#define SYS_GPB_MFP1_PB6MFP_INT4_INT		SYS_GPB_MFP1_PB6MFP_INT4
#define SYS_GPB_MFP1_PB7MFP_INT5_INT		SYS_GPB_MFP1_PB7MFP_INT5
#define SYS_GPB_MFP2_PB8MFP_INT6_INT		SYS_GPB_MFP2_PB8MFP_INT6
#define SYS_GPB_MFP2_PB9MFP_INT7_INT		SYS_GPB_MFP2_PB9MFP_INT7

#define SYS_GPB_MFP1_PB6MFP_USB0_VBUS_EN	SYS_GPB_MFP1_PB6MFP_USB_VBUS_EN
#define SYS_GPB_MFP2_PB8MFP_USB0_VBUS_EN	SYS_GPB_MFP2_PB8MFP_USB_VBUS_EN
#define SYS_GPB_MFP1_PB7MFP_USB0_VBUS_ST	SYS_GPB_MFP1_PB7MFP_USB_VBUS_ST
#define SYS_GPB_MFP2_PB8MFP_USB0_VBUS_ST	SYS_GPB_MFP2_PB8MFP_USB_VBUS_ST
#define SYS_GPB_MFP2_PB9MFP_USB0_VBUS_ST	SYS_GPB_MFP2_PB9MFP_USB_VBUS_ST
#define SYS_GPB_MFP3_PB13MFP_USB0_VBUS_ST	SYS_GPB_MFP3_PB13MFP_USB_VBUS_ST

#define SYS_GPB_MFP1_PB6MFP_HSUSB0_VBUS_EN	SYS_GPB_MFP1_PB6MFP_HSUSB_VBUS_EN
#define SYS_GPB_MFP1_PB7MFP_HSUSB0_VBUS_ST	SYS_GPB_MFP1_PB7MFP_HSUSB_VBUS_ST
#define SYS_GPB_MFP3_PB13MFP_HSUSB0_VBUS_ST	SYS_GPB_MFP3_PB13MFP_HSUSB_VBUS_ST

#define SYS_GPB_MFP1_PB5MFP_TM0_TM			SYS_GPB_MFP1_PB5MFP_TM0
#define SYS_GPB_MFP1_PB6MFP_TM1_TM			SYS_GPB_MFP1_PB6MFP_TM1
#define SYS_GPB_MFP1_PB4MFP_TM1_TM			SYS_GPB_MFP1_PB4MFP_TM1
#define SYS_GPB_MFP0_PB3MFP_TM2_TM			SYS_GPB_MFP0_PB3MFP_TM2
#define SYS_GPB_MFP0_PB2MFP_TM3_TM			SYS_GPB_MFP0_PB2MFP_TM3

#define SYS_GPB_MFP1_PB5MFP_LPTM0_LPTM		SYS_GPB_MFP1_PB5MFP_LPTM0
#define SYS_GPB_MFP1_PB4MFP_LPTM1_LPTM		SYS_GPB_MFP1_PB4MFP_LPTM1
#define SYS_GPB_MFP3_PB13MFP_LPTM1_LPTM		SYS_GPB_MFP3_PB13MFP_LPTM1

#define SYS_GPB_MFP1_PB7MFP_CCAP0_DATA0		SYS_GPB_MFP1_PB7MFP_CCAP_DATA0
#define SYS_GPB_MFP2_PB8MFP_CCAP0_DATA1		SYS_GPB_MFP2_PB8MFP_CCAP_DATA1
#define SYS_GPA_MFP0_PA2MFP_CCAP0_DATA2		SYS_GPA_MFP0_PA2MFP_CCAP_DATA2
#define SYS_GPA_MFP0_PA3MFP_CCAP0_DATA3		SYS_GPA_MFP0_PA3MFP_CCAP_DATA3
#define SYS_GPA_MFP0_PA0MFP_CCAP0_DATA6		SYS_GPA_MFP0_PA0MFP_CCAP_DATA6
#define SYS_GPA_MFP0_PA1MFP_CCAP0_DATA7		SYS_GPA_MFP0_PA1MFP_CCAP_DATA7
#define SYS_GPB_MFP2_PB9MFP_CCAP0_HSYNC		SYS_GPB_MFP2_PB9MFP_CCAP_HSYNC
#define SYS_GPG_MFP0_PG0MFP_CCAP0_PIXCLK	SYS_GPG_MFP0_PG0MFP_CCAP_PIXCLK
#define SYS_GPB_MFP3_PB13MFP_CCAP0_PIXCLK	SYS_GPB_MFP3_PB13MFP_CCAP_PIXCLK
#define	SYS_GPG_MFP0_PG1MFP_CCAP0_SCLK		SYS_GPG_MFP0_PG1MFP_CCAP_SCLK
#define SYS_GPB_MFP3_PB12MFP_CCAP0_SCLK		SYS_GPB_MFP3_PB12MFP_CCAP_SCLK

#define SYS_GPA_MFP0_PA3MFP_DMIC0_CH0_CLKLP	SYS_GPA_MFP0_PA3MFP_DMIC0_CLKLP
#define SYS_GPB_MFP1_PB6MFP_DMIC0_CH0_CLKLP	SYS_GPB_MFP1_PB6MFP_DMIC0_CLKLP
#define SYS_GPB_MFP1_PB4MFP_DMIC0_CH0_CLK	SYS_GPB_MFP1_PB4MFP_DMIC0_CLK
#define SYS_GPB_MFP1_PB5MFP_DMIC0_CH0_DAT	SYS_GPB_MFP1_PB5MFP_DMIC0_DAT
#define SYS_GPA_MFP0_PA1MFP_DMIC0_CH1_CLK	SYS_GPA_MFP0_PA1MFP_DMIC1_CLK
#define SYS_GPA_MFP0_PA2MFP_DMIC0_CH1_DAT	SYS_GPA_MFP0_PA2MFP_DMIC1_DAT
#define SYS_GPB_MFP0_PB2MFP_DMIC0_CH1_CLK	SYS_GPB_MFP0_PB2MFP_DMIC1_CLK
#define SYS_GPB_MFP0_PB3MFP_DMIC0_CH1_DAT	SYS_GPB_MFP0_PB3MFP_DMIC1_DAT

#define mp_hal_pin_high(p)	((p)->gpio->DOUT |= (1 << (p)->pin))
#define mp_hal_pin_low(p)	((p)->gpio->DOUT &= ~(1 << (p)->pin))

#define mp_hal_pin_read(p)      (((p)->gpio->PIN >> (p)->pin) & 1)
#define mp_hal_pin_write(p, v)	do { if (v) { mp_hal_pin_high(p); } else { mp_hal_pin_low(p); } } while (0)

#define IS_GPIO_MODE(MODE) (((MODE) == GPIO_MODE_INPUT)              ||\
                            ((MODE) == GPIO_MODE_OUTPUT)          	 ||\
                            ((MODE) == GPIO_MODE_OPEN_DRAIN)         ||\
                            ((MODE) == GPIO_MODE_AF_PP)              ||\
                            ((MODE) == GPIO_MODE_AF_OD)              ||\
                            ((MODE) == GPIO_MODE_QUASI))

#define IS_GPIO_PULL(PULL) (((PULL) == GPIO_PUSEL_DISABLE) || ((PULL) == GPIO_PUSEL_PULL_UP) || \
                            ((PULL) == GPIO_PUSEL_PULL_DOWN))

#define IS_GPIO_INT(ATTR) (((ATTR) == GPIO_INT_RISING)              ||\
                            ((ATTR) == GPIO_INT_FALLING)          	 ||\
                            ((ATTR) == GPIO_INT_BOTH_EDGE)         ||\
                            ((ATTR) == GPIO_INT_HIGH)         ||\
                            ((ATTR) == GPIO_INT_LOW))



