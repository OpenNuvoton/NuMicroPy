// This file was automatically generated by makeqstrdata.py

QDEF(MP_QSTR_NULL, (const byte*)"\x00\x00" "")
QDEF(MP_QSTR_, (const byte*)"\x05\x00" "")
QDEF(MP_QSTR___add__, (const byte*)"\xc4\x07" "__add__")
QDEF(MP_QSTR___bool__, (const byte*)"\x2b\x08" "__bool__")
QDEF(MP_QSTR___build_class__, (const byte*)"\x42\x0f" "__build_class__")
QDEF(MP_QSTR___call__, (const byte*)"\xa7\x08" "__call__")
QDEF(MP_QSTR___class__, (const byte*)"\x2b\x09" "__class__")
QDEF(MP_QSTR___contains__, (const byte*)"\xc6\x0c" "__contains__")
QDEF(MP_QSTR___del__, (const byte*)"\x68\x07" "__del__")
QDEF(MP_QSTR___delitem__, (const byte*)"\xfd\x0b" "__delitem__")
QDEF(MP_QSTR___enter__, (const byte*)"\x6d\x09" "__enter__")
QDEF(MP_QSTR___eq__, (const byte*)"\x71\x06" "__eq__")
QDEF(MP_QSTR___exit__, (const byte*)"\x45\x08" "__exit__")
QDEF(MP_QSTR___ge__, (const byte*)"\xa7\x06" "__ge__")
QDEF(MP_QSTR___getattr__, (const byte*)"\x40\x0b" "__getattr__")
QDEF(MP_QSTR___getitem__, (const byte*)"\x26\x0b" "__getitem__")
QDEF(MP_QSTR___gt__, (const byte*)"\xb6\x06" "__gt__")
QDEF(MP_QSTR___hash__, (const byte*)"\xf7\x08" "__hash__")
QDEF(MP_QSTR___iadd__, (const byte*)"\x6d\x08" "__iadd__")
QDEF(MP_QSTR___import__, (const byte*)"\x38\x0a" "__import__")
QDEF(MP_QSTR___init__, (const byte*)"\x5f\x08" "__init__")
QDEF(MP_QSTR___int__, (const byte*)"\x16\x07" "__int__")
QDEF(MP_QSTR___isub__, (const byte*)"\x08\x08" "__isub__")
QDEF(MP_QSTR___iter__, (const byte*)"\xcf\x08" "__iter__")
QDEF(MP_QSTR___le__, (const byte*)"\xcc\x06" "__le__")
QDEF(MP_QSTR___len__, (const byte*)"\xe2\x07" "__len__")
QDEF(MP_QSTR___lt__, (const byte*)"\x5d\x06" "__lt__")
QDEF(MP_QSTR___main__, (const byte*)"\x8e\x08" "__main__")
QDEF(MP_QSTR___module__, (const byte*)"\xff\x0a" "__module__")
QDEF(MP_QSTR___name__, (const byte*)"\xe2\x08" "__name__")
QDEF(MP_QSTR___new__, (const byte*)"\x79\x07" "__new__")
QDEF(MP_QSTR___next__, (const byte*)"\x02\x08" "__next__")
QDEF(MP_QSTR___path__, (const byte*)"\xc8\x08" "__path__")
QDEF(MP_QSTR___qualname__, (const byte*)"\x6b\x0c" "__qualname__")
QDEF(MP_QSTR___repl_print__, (const byte*)"\x01\x0e" "__repl_print__")
QDEF(MP_QSTR___repr__, (const byte*)"\x10\x08" "__repr__")
QDEF(MP_QSTR___setitem__, (const byte*)"\x32\x0b" "__setitem__")
QDEF(MP_QSTR___str__, (const byte*)"\xd0\x07" "__str__")
QDEF(MP_QSTR___sub__, (const byte*)"\x21\x07" "__sub__")
QDEF(MP_QSTR___traceback__, (const byte*)"\x4f\x0d" "__traceback__")
QDEF(MP_QSTR__star_, (const byte*)"\x8f\x01" "*")
QDEF(MP_QSTR__, (const byte*)"\xfa\x01" "_")
QDEF(MP_QSTR__slash_, (const byte*)"\x8a\x01" "/")
QDEF(MP_QSTR__percent__hash_o, (const byte*)"\x6c\x03" "%#o")
QDEF(MP_QSTR__percent__hash_x, (const byte*)"\x7b\x03" "%#x")
QDEF(MP_QSTR__brace_open__colon__hash_b_brace_close_, (const byte*)"\x58\x05" "{:#b}")
QDEF(MP_QSTR__space_, (const byte*)"\x85\x01" " ")
QDEF(MP_QSTR__0x0a_, (const byte*)"\xaf\x01" "\x0a")
QDEF(MP_QSTR_maximum_space_recursion_space_depth_space_exceeded, (const byte*)"\x73\x20" "maximum recursion depth exceeded")
QDEF(MP_QSTR__lt_module_gt_, (const byte*)"\xbd\x08" "<module>")
QDEF(MP_QSTR__lt_lambda_gt_, (const byte*)"\x80\x08" "<lambda>")
QDEF(MP_QSTR__lt_listcomp_gt_, (const byte*)"\xd4\x0a" "<listcomp>")
QDEF(MP_QSTR__lt_dictcomp_gt_, (const byte*)"\xcc\x0a" "<dictcomp>")
QDEF(MP_QSTR__lt_setcomp_gt_, (const byte*)"\x54\x09" "<setcomp>")
QDEF(MP_QSTR__lt_genexpr_gt_, (const byte*)"\x34\x09" "<genexpr>")
QDEF(MP_QSTR__lt_string_gt_, (const byte*)"\x52\x08" "<string>")
QDEF(MP_QSTR__lt_stdin_gt_, (const byte*)"\xe3\x07" "<stdin>")
QDEF(MP_QSTR_utf_hyphen_8, (const byte*)"\xb7\x05" "utf-8")
QDEF(MP_QSTR__slash_flash, (const byte*)"\x1a\x06" "/flash")
QDEF(MP_QSTR__slash_flash_slash_lib, (const byte*)"\x92\x0a" "/flash/lib")
QDEF(MP_QSTR__slash_sd, (const byte*)"\xbd\x03" "/sd")
QDEF(MP_QSTR__slash_sd_slash_lib, (const byte*)"\xb5\x07" "/sd/lib")
QDEF(MP_QSTR_A0, (const byte*)"\x54\x02" "A0")
QDEF(MP_QSTR_A1, (const byte*)"\x55\x02" "A1")
QDEF(MP_QSTR_A2, (const byte*)"\x56\x02" "A2")
QDEF(MP_QSTR_A3, (const byte*)"\x57\x02" "A3")
QDEF(MP_QSTR_A4, (const byte*)"\x50\x02" "A4")
QDEF(MP_QSTR_A5, (const byte*)"\x51\x02" "A5")
QDEF(MP_QSTR_AF_PA0_BPWM0_CH0, (const byte*)"\xff\x10" "AF_PA0_BPWM0_CH0")
QDEF(MP_QSTR_AF_PA0_DAC0_ST, (const byte*)"\x0d\x0e" "AF_PA0_DAC0_ST")
QDEF(MP_QSTR_AF_PA0_EPWM0_CH5, (const byte*)"\xfd\x10" "AF_PA0_EPWM0_CH5")
QDEF(MP_QSTR_AF_PA0_I2C2_SDA, (const byte*)"\x60\x0f" "AF_PA0_I2C2_SDA")
QDEF(MP_QSTR_AF_PA0_QSPI0_MOSI0, (const byte*)"\x5f\x12" "AF_PA0_QSPI0_MOSI0")
QDEF(MP_QSTR_AF_PA0_SC0_CLK, (const byte*)"\x18\x0e" "AF_PA0_SC0_CLK")
QDEF(MP_QSTR_AF_PA0_SD1_DAT0, (const byte*)"\x1b\x0f" "AF_PA0_SD1_DAT0")
QDEF(MP_QSTR_AF_PA0_SPI0_MOSI, (const byte*)"\xde\x10" "AF_PA0_SPI0_MOSI")
QDEF(MP_QSTR_AF_PA0_SPIM0_MOSI, (const byte*)"\xf3\x11" "AF_PA0_SPIM0_MOSI")
QDEF(MP_QSTR_AF_PA0_UART0_RXD, (const byte*)"\xd0\x10" "AF_PA0_UART0_RXD")
QDEF(MP_QSTR_AF_PA0_UART1_nRTS, (const byte*)"\x04\x11" "AF_PA0_UART1_nRTS")
QDEF(MP_QSTR_AF_PA1_BPWM0_CH1, (const byte*)"\x7f\x10" "AF_PA1_BPWM0_CH1")
QDEF(MP_QSTR_AF_PA1_DAC1_ST, (const byte*)"\xad\x0e" "AF_PA1_DAC1_ST")
QDEF(MP_QSTR_AF_PA1_EPWM0_CH4, (const byte*)"\x7d\x10" "AF_PA1_EPWM0_CH4")
QDEF(MP_QSTR_AF_PA1_I2C2_SCL, (const byte*)"\xab\x0f" "AF_PA1_I2C2_SCL")
QDEF(MP_QSTR_AF_PA1_QSPI0_MISO0, (const byte*)"\xde\x12" "AF_PA1_QSPI0_MISO0")
QDEF(MP_QSTR_AF_PA1_SC0_DAT, (const byte*)"\xec\x0e" "AF_PA1_SC0_DAT")
QDEF(MP_QSTR_AF_PA1_SD1_DAT1, (const byte*)"\x7b\x0f" "AF_PA1_SD1_DAT1")
QDEF(MP_QSTR_AF_PA1_SPI0_MISO, (const byte*)"\x1f\x10" "AF_PA1_SPI0_MISO")
QDEF(MP_QSTR_AF_PA1_SPIM0_MISO, (const byte*)"\x52\x11" "AF_PA1_SPIM0_MISO")
QDEF(MP_QSTR_AF_PA1_UART0_TXD, (const byte*)"\x57\x10" "AF_PA1_UART0_TXD")
QDEF(MP_QSTR_AF_PA1_UART1_nCTS, (const byte*)"\x34\x11" "AF_PA1_UART1_nCTS")
QDEF(MP_QSTR_AF_PA2_BPWM0_CH2, (const byte*)"\xff\x10" "AF_PA2_BPWM0_CH2")
QDEF(MP_QSTR_AF_PA2_EPWM0_CH3, (const byte*)"\xf9\x10" "AF_PA2_EPWM0_CH3")
QDEF(MP_QSTR_AF_PA2_I2C1_SDA, (const byte*)"\x61\x0f" "AF_PA2_I2C1_SDA")
QDEF(MP_QSTR_AF_PA2_QSPI0_CLK, (const byte*)"\xb1\x10" "AF_PA2_QSPI0_CLK")
QDEF(MP_QSTR_AF_PA2_SC0_RST, (const byte*)"\x2b\x0e" "AF_PA2_SC0_RST")
QDEF(MP_QSTR_AF_PA2_SD1_DAT2, (const byte*)"\xdb\x0f" "AF_PA2_SD1_DAT2")
QDEF(MP_QSTR_AF_PA2_SPI0_CLK, (const byte*)"\x40\x0f" "AF_PA2_SPI0_CLK")
QDEF(MP_QSTR_AF_PA2_SPIM0_CLK, (const byte*)"\x0d\x10" "AF_PA2_SPIM0_CLK")
QDEF(MP_QSTR_AF_PA2_UART1_RXD, (const byte*)"\x13\x10" "AF_PA2_UART1_RXD")
QDEF(MP_QSTR_AF_PA2_UART4_RXD, (const byte*)"\xd6\x10" "AF_PA2_UART4_RXD")
QDEF(MP_QSTR_AF_PA3_BPWM0_CH3, (const byte*)"\x7f\x10" "AF_PA3_BPWM0_CH3")
QDEF(MP_QSTR_AF_PA3_EPWM0_CH2, (const byte*)"\x79\x10" "AF_PA3_EPWM0_CH2")
QDEF(MP_QSTR_AF_PA3_I2C1_SCL, (const byte*)"\x6a\x0f" "AF_PA3_I2C1_SCL")
QDEF(MP_QSTR_AF_PA3_QEI0_B, (const byte*)"\x30\x0d" "AF_PA3_QEI0_B")
QDEF(MP_QSTR_AF_PA3_QSPI0_SS, (const byte*)"\xd4\x0f" "AF_PA3_QSPI0_SS")
QDEF(MP_QSTR_AF_PA3_SC0_PWR, (const byte*)"\x2a\x0e" "AF_PA3_SC0_PWR")
QDEF(MP_QSTR_AF_PA3_SD1_DAT3, (const byte*)"\x3b\x0f" "AF_PA3_SD1_DAT3")
QDEF(MP_QSTR_AF_PA3_SPI0_SS, (const byte*)"\xe5\x0e" "AF_PA3_SPI0_SS")
QDEF(MP_QSTR_AF_PA3_SPIM0_SS, (const byte*)"\xe8\x0f" "AF_PA3_SPIM0_SS")
QDEF(MP_QSTR_AF_PA3_UART1_TXD, (const byte*)"\x14\x10" "AF_PA3_UART1_TXD")
QDEF(MP_QSTR_AF_PA3_UART4_TXD, (const byte*)"\x51\x10" "AF_PA3_UART4_TXD")
QDEF(MP_QSTR_AF_PA4_BPWM0_CH4, (const byte*)"\xff\x10" "AF_PA4_BPWM0_CH4")
QDEF(MP_QSTR_AF_PA4_CAN0_RXD, (const byte*)"\xea\x0f" "AF_PA4_CAN0_RXD")
QDEF(MP_QSTR_AF_PA4_EPWM0_CH1, (const byte*)"\xfd\x10" "AF_PA4_EPWM0_CH1")
QDEF(MP_QSTR_AF_PA4_I2C0_SDA, (const byte*)"\x66\x0f" "AF_PA4_I2C0_SDA")
QDEF(MP_QSTR_AF_PA4_QEI0_A, (const byte*)"\x14\x0d" "AF_PA4_QEI0_A")
QDEF(MP_QSTR_AF_PA4_QSPI0_MOSI1, (const byte*)"\x5a\x12" "AF_PA4_QSPI0_MOSI1")
QDEF(MP_QSTR_AF_PA4_SC0_nCD, (const byte*)"\xd1\x0e" "AF_PA4_SC0_nCD")
QDEF(MP_QSTR_AF_PA4_SD1_CLK, (const byte*)"\xfa\x0e" "AF_PA4_SD1_CLK")
QDEF(MP_QSTR_AF_PA4_SPI0_I2SMCLK, (const byte*)"\x83\x13" "AF_PA4_SPI0_I2SMCLK")
QDEF(MP_QSTR_AF_PA4_SPIM0_D3, (const byte*)"\xd8\x0f" "AF_PA4_SPIM0_D3")
QDEF(MP_QSTR_AF_PA4_UART0_nRTS, (const byte*)"\xa1\x11" "AF_PA4_UART0_nRTS")
QDEF(MP_QSTR_AF_PA4_UART5_RXD, (const byte*)"\x11\x10" "AF_PA4_UART5_RXD")
QDEF(MP_QSTR_AF_PA5_BPWM0_CH5, (const byte*)"\x7f\x10" "AF_PA5_BPWM0_CH5")
QDEF(MP_QSTR_AF_PA5_CAN0_TXD, (const byte*)"\xcd\x0f" "AF_PA5_CAN0_TXD")
QDEF(MP_QSTR_AF_PA5_EPWM0_CH0, (const byte*)"\x7d\x10" "AF_PA5_EPWM0_CH0")
QDEF(MP_QSTR_AF_PA5_I2C0_SCL, (const byte*)"\x2d\x0f" "AF_PA5_I2C0_SCL")
QDEF(MP_QSTR_AF_PA5_QEI0_INDEX, (const byte*)"\x0a\x11" "AF_PA5_QEI0_INDEX")
QDEF(MP_QSTR_AF_PA5_QSPI0_MISO1, (const byte*)"\xdb\x12" "AF_PA5_QSPI0_MISO1")
QDEF(MP_QSTR_AF_PA5_SC2_nCD, (const byte*)"\x52\x0e" "AF_PA5_SC2_nCD")
QDEF(MP_QSTR_AF_PA5_SD1_CMD, (const byte*)"\x15\x0e" "AF_PA5_SD1_CMD")
QDEF(MP_QSTR_AF_PA5_SPI1_I2SMCLK, (const byte*)"\xa3\x13" "AF_PA5_SPI1_I2SMCLK")
QDEF(MP_QSTR_AF_PA5_SPIM0_D2, (const byte*)"\xb8\x0f" "AF_PA5_SPIM0_D2")
QDEF(MP_QSTR_AF_PA5_UART0_nCTS, (const byte*)"\x91\x11" "AF_PA5_UART0_nCTS")
QDEF(MP_QSTR_AF_PA5_UART5_TXD, (const byte*)"\x16\x10" "AF_PA5_UART5_TXD")
QDEF(MP_QSTR_AF_PB0_EADC0_CH0, (const byte*)"\x37\x10" "AF_PB0_EADC0_CH0")
QDEF(MP_QSTR_AF_PB0_EBI0_ADR9, (const byte*)"\x6f\x10" "AF_PB0_EBI0_ADR9")
QDEF(MP_QSTR_AF_PB0_EPWM0_BRAKE1, (const byte*)"\x8e\x13" "AF_PB0_EPWM0_BRAKE1")
QDEF(MP_QSTR_AF_PB0_EPWM0_CH5, (const byte*)"\x9e\x10" "AF_PB0_EPWM0_CH5")
QDEF(MP_QSTR_AF_PB0_EPWM1_CH5, (const byte*)"\xdf\x10" "AF_PB0_EPWM1_CH5")
QDEF(MP_QSTR_AF_PB0_I2C1_SDA, (const byte*)"\xe0\x0f" "AF_PB0_I2C1_SDA")
QDEF(MP_QSTR_AF_PB0_OPA0_P, (const byte*)"\x41\x0d" "AF_PB0_OPA0_P")
QDEF(MP_QSTR_AF_PB0_SD0_CMD, (const byte*)"\x72\x0e" "AF_PB0_SD0_CMD")
QDEF(MP_QSTR_AF_PB0_SPI0_I2SMCLK, (const byte*)"\x44\x13" "AF_PB0_SPI0_I2SMCLK")
QDEF(MP_QSTR_AF_PB0_UART2_RXD, (const byte*)"\x31\x10" "AF_PB0_UART2_RXD")
QDEF(MP_QSTR_AF_PB12_ACMP0_P2, (const byte*)"\x41\x10" "AF_PB12_ACMP0_P2")
QDEF(MP_QSTR_AF_PB12_ACMP1_P2, (const byte*)"\xe0\x10" "AF_PB12_ACMP1_P2")
QDEF(MP_QSTR_AF_PB12_DAC0_OUT, (const byte*)"\x14\x10" "AF_PB12_DAC0_OUT")
QDEF(MP_QSTR_AF_PB12_EADC0_CH12, (const byte*)"\x97\x12" "AF_PB12_EADC0_CH12")
QDEF(MP_QSTR_AF_PB12_EBI0_AD15, (const byte*)"\x13\x11" "AF_PB12_EBI0_AD15")
QDEF(MP_QSTR_AF_PB12_EPWM1_CH3, (const byte*)"\xea\x11" "AF_PB12_EPWM1_CH3")
QDEF(MP_QSTR_AF_PB12_I2C2_SDA, (const byte*)"\x30\x10" "AF_PB12_I2C2_SDA")
QDEF(MP_QSTR_AF_PB12_SC1_CLK, (const byte*)"\x89\x0f" "AF_PB12_SC1_CLK")
QDEF(MP_QSTR_AF_PB12_SD0_nCD, (const byte*)"\xa2\x0f" "AF_PB12_SD0_nCD")
QDEF(MP_QSTR_AF_PB12_SPI0_MOSI, (const byte*)"\x8e\x11" "AF_PB12_SPI0_MOSI")
QDEF(MP_QSTR_AF_PB12_TMR3_EXT, (const byte*)"\xdd\x10" "AF_PB12_TMR3_EXT")
QDEF(MP_QSTR_AF_PB12_UART0_RXD, (const byte*)"\x80\x11" "AF_PB12_UART0_RXD")
QDEF(MP_QSTR_AF_PB12_UART3_nCTS, (const byte*)"\xc7\x12" "AF_PB12_UART3_nCTS")
QDEF(MP_QSTR_AF_PB12_USCI0_CLK, (const byte*)"\xb4\x11" "AF_PB12_USCI0_CLK")
QDEF(MP_QSTR_AF_PB1_EADC0_CH1, (const byte*)"\x77\x10" "AF_PB1_EADC0_CH1")
QDEF(MP_QSTR_AF_PB1_EBI0_ADR8, (const byte*)"\xef\x10" "AF_PB1_EBI0_ADR8")
QDEF(MP_QSTR_AF_PB1_EMAC0_RMII_RXERR, (const byte*)"\x0b\x17" "AF_PB1_EMAC0_RMII_RXERR")
QDEF(MP_QSTR_AF_PB1_EPWM0_BRAKE0, (const byte*)"\xae\x13" "AF_PB1_EPWM0_BRAKE0")
QDEF(MP_QSTR_AF_PB1_EPWM0_CH4, (const byte*)"\x9e\x10" "AF_PB1_EPWM0_CH4")
QDEF(MP_QSTR_AF_PB1_EPWM1_CH4, (const byte*)"\x5f\x10" "AF_PB1_EPWM1_CH4")
QDEF(MP_QSTR_AF_PB1_I2C1_SCL, (const byte*)"\x6b\x0f" "AF_PB1_I2C1_SCL")
QDEF(MP_QSTR_AF_PB1_I2S0_LRCK, (const byte*)"\xf0\x10" "AF_PB1_I2S0_LRCK")
QDEF(MP_QSTR_AF_PB1_OPA0_N, (const byte*)"\x7e\x0d" "AF_PB1_OPA0_N")
QDEF(MP_QSTR_AF_PB1_SD0_CLK, (const byte*)"\x1d\x0e" "AF_PB1_SD0_CLK")
QDEF(MP_QSTR_AF_PB1_SPI1_I2SMCLK, (const byte*)"\xa4\x13" "AF_PB1_SPI1_I2SMCLK")
QDEF(MP_QSTR_AF_PB1_SPI3_I2SMCLK, (const byte*)"\x26\x13" "AF_PB1_SPI3_I2SMCLK")
QDEF(MP_QSTR_AF_PB1_UART2_TXD, (const byte*)"\x36\x10" "AF_PB1_UART2_TXD")
QDEF(MP_QSTR_AF_PB1_USCI1_CLK, (const byte*)"\x87\x10" "AF_PB1_USCI1_CLK")
QDEF(MP_QSTR_AF_PB2_ACMP0_P1, (const byte*)"\x93\x0f" "AF_PB2_ACMP0_P1")
QDEF(MP_QSTR_AF_PB2_EADC0_CH2, (const byte*)"\xb7\x10" "AF_PB2_EADC0_CH2")
QDEF(MP_QSTR_AF_PB2_EBI0_ADR3, (const byte*)"\x67\x10" "AF_PB2_EBI0_ADR3")
QDEF(MP_QSTR_AF_PB2_EMAC0_RMII_CRSDV, (const byte*)"\xf7\x17" "AF_PB2_EMAC0_RMII_CRSDV")
QDEF(MP_QSTR_AF_PB2_EPWM0_CH3, (const byte*)"\x9a\x10" "AF_PB2_EPWM0_CH3")
QDEF(MP_QSTR_AF_PB2_I2S0_DO, (const byte*)"\xce\x0e" "AF_PB2_I2S0_DO")
QDEF(MP_QSTR_AF_PB2_INT3_INT, (const byte*)"\x6e\x0f" "AF_PB2_INT3_INT")
QDEF(MP_QSTR_AF_PB2_OPA0_O, (const byte*)"\x1c\x0d" "AF_PB2_OPA0_O")
QDEF(MP_QSTR_AF_PB2_SC0_PWR, (const byte*)"\x08\x0e" "AF_PB2_SC0_PWR")
QDEF(MP_QSTR_AF_PB2_SD0_DAT0, (const byte*)"\x7b\x0f" "AF_PB2_SD0_DAT0")
QDEF(MP_QSTR_AF_PB2_SPI1_SS, (const byte*)"\xe6\x0e" "AF_PB2_SPI1_SS")
QDEF(MP_QSTR_AF_PB2_TMR3_TMR, (const byte*)"\xae\x0f" "AF_PB2_TMR3_TMR")
QDEF(MP_QSTR_AF_PB2_UART1_RXD, (const byte*)"\x70\x10" "AF_PB2_UART1_RXD")
QDEF(MP_QSTR_AF_PB2_UART5_nCTS, (const byte*)"\xd0\x11" "AF_PB2_UART5_nCTS")
QDEF(MP_QSTR_AF_PB2_USCI1_DAT0, (const byte*)"\x61\x11" "AF_PB2_USCI1_DAT0")
QDEF(MP_QSTR_AF_PB3_ACMP0_N, (const byte*)"\x3d\x0e" "AF_PB3_ACMP0_N")
QDEF(MP_QSTR_AF_PB3_EADC0_CH3, (const byte*)"\xf7\x10" "AF_PB3_EADC0_CH3")
QDEF(MP_QSTR_AF_PB3_EBI0_ADR2, (const byte*)"\xe7\x10" "AF_PB3_EBI0_ADR2")
QDEF(MP_QSTR_AF_PB3_EMAC0_RMII_RXD1, (const byte*)"\x79\x16" "AF_PB3_EMAC0_RMII_RXD1")
QDEF(MP_QSTR_AF_PB3_EPWM0_CH2, (const byte*)"\x9a\x10" "AF_PB3_EPWM0_CH2")
QDEF(MP_QSTR_AF_PB3_I2S0_DI, (const byte*)"\x09\x0e" "AF_PB3_I2S0_DI")
QDEF(MP_QSTR_AF_PB3_INT2_INT, (const byte*)"\xce\x0f" "AF_PB3_INT2_INT")
QDEF(MP_QSTR_AF_PB3_SC0_RST, (const byte*)"\x09\x0e" "AF_PB3_SC0_RST")
QDEF(MP_QSTR_AF_PB3_SD0_DAT1, (const byte*)"\xdb\x0f" "AF_PB3_SD0_DAT1")
QDEF(MP_QSTR_AF_PB3_SPI1_CLK, (const byte*)"\x23\x0f" "AF_PB3_SPI1_CLK")
QDEF(MP_QSTR_AF_PB3_TMR2_TMR, (const byte*)"\x4e\x0f" "AF_PB3_TMR2_TMR")
QDEF(MP_QSTR_AF_PB3_UART1_TXD, (const byte*)"\xf7\x10" "AF_PB3_UART1_TXD")
QDEF(MP_QSTR_AF_PB3_UART5_nRTS, (const byte*)"\x20\x11" "AF_PB3_UART5_nRTS")
QDEF(MP_QSTR_AF_PB3_USCI1_DAT1, (const byte*)"\x81\x11" "AF_PB3_USCI1_DAT1")
QDEF(MP_QSTR_AF_PB6_BPWM1_CH5, (const byte*)"\x5e\x10" "AF_PB6_BPWM1_CH5")
QDEF(MP_QSTR_AF_PB6_CAN1_RXD, (const byte*)"\xea\x0f" "AF_PB6_CAN1_RXD")
QDEF(MP_QSTR_AF_PB6_EADC0_CH6, (const byte*)"\xb7\x10" "AF_PB6_EADC0_CH6")
QDEF(MP_QSTR_AF_PB6_EBI0_nCS1, (const byte*)"\xc8\x10" "AF_PB6_EBI0_nCS1")
QDEF(MP_QSTR_AF_PB6_EBI0_nWRH, (const byte*)"\x84\x10" "AF_PB6_EBI0_nWRH")
QDEF(MP_QSTR_AF_PB6_EMAC0_PPS, (const byte*)"\x50\x10" "AF_PB6_EMAC0_PPS")
QDEF(MP_QSTR_AF_PB6_EPWM1_BRAKE1, (const byte*)"\xa9\x13" "AF_PB6_EPWM1_BRAKE1")
QDEF(MP_QSTR_AF_PB6_EPWM1_CH5, (const byte*)"\xd9\x10" "AF_PB6_EPWM1_CH5")
QDEF(MP_QSTR_AF_PB6_INT4_INT, (const byte*)"\x2d\x0f" "AF_PB6_INT4_INT")
QDEF(MP_QSTR_AF_PB6_SD1_CLK, (const byte*)"\xdb\x0e" "AF_PB6_SD1_CLK")
QDEF(MP_QSTR_AF_PB6_UART1_RXD, (const byte*)"\x74\x10" "AF_PB6_UART1_RXD")
QDEF(MP_QSTR_AF_PB6_USCI1_DAT1, (const byte*)"\xe4\x11" "AF_PB6_USCI1_DAT1")
QDEF(MP_QSTR_AF_PB7_BPWM1_CH4, (const byte*)"\xde\x10" "AF_PB7_BPWM1_CH4")
QDEF(MP_QSTR_AF_PB7_CAN1_TXD, (const byte*)"\x0d\x0f" "AF_PB7_CAN1_TXD")
QDEF(MP_QSTR_AF_PB7_EADC0_CH7, (const byte*)"\xf7\x10" "AF_PB7_EADC0_CH7")
QDEF(MP_QSTR_AF_PB7_EBI0_nCS0, (const byte*)"\x88\x10" "AF_PB7_EBI0_nCS0")
QDEF(MP_QSTR_AF_PB7_EBI0_nWRL, (const byte*)"\x81\x10" "AF_PB7_EBI0_nWRL")
QDEF(MP_QSTR_AF_PB7_EMAC0_RMII_TXEN, (const byte*)"\x65\x16" "AF_PB7_EMAC0_RMII_TXEN")
QDEF(MP_QSTR_AF_PB7_EPWM1_BRAKE0, (const byte*)"\x09\x13" "AF_PB7_EPWM1_BRAKE0")
QDEF(MP_QSTR_AF_PB7_EPWM1_CH4, (const byte*)"\x59\x10" "AF_PB7_EPWM1_CH4")
QDEF(MP_QSTR_AF_PB7_INT5_INT, (const byte*)"\x8d\x0f" "AF_PB7_INT5_INT")
QDEF(MP_QSTR_AF_PB7_SD1_CMD, (const byte*)"\xb4\x0e" "AF_PB7_SD1_CMD")
QDEF(MP_QSTR_AF_PB7_UART1_TXD, (const byte*)"\xf3\x10" "AF_PB7_UART1_TXD")
QDEF(MP_QSTR_AF_PB7_USCI1_DAT0, (const byte*)"\x04\x11" "AF_PB7_USCI1_DAT0")
QDEF(MP_QSTR_AF_PB8_BPWM1_CH3, (const byte*)"\x56\x10" "AF_PB8_BPWM1_CH3")
QDEF(MP_QSTR_AF_PB8_EADC0_CH8, (const byte*)"\x37\x10" "AF_PB8_EADC0_CH8")
QDEF(MP_QSTR_AF_PB8_EBI0_ADR19, (const byte*)"\x76\x11" "AF_PB8_EBI0_ADR19")
QDEF(MP_QSTR_AF_PB8_EMAC0_RMII_TXD1, (const byte*)"\x34\x16" "AF_PB8_EMAC0_RMII_TXD1")
QDEF(MP_QSTR_AF_PB8_I2C1_SMBSUS, (const byte*)"\xf7\x12" "AF_PB8_I2C1_SMBSUS")
QDEF(MP_QSTR_AF_PB8_INT6_INT, (const byte*)"\xe1\x0f" "AF_PB8_INT6_INT")
QDEF(MP_QSTR_AF_PB8_SPI3_MOSI, (const byte*)"\xd6\x10" "AF_PB8_SPI3_MOSI")
QDEF(MP_QSTR_AF_PB8_UART0_RXD, (const byte*)"\xbb\x10" "AF_PB8_UART0_RXD")
QDEF(MP_QSTR_AF_PB8_UART1_nRTS, (const byte*)"\x4f\x11" "AF_PB8_UART1_nRTS")
QDEF(MP_QSTR_AF_PB8_USCI1_CLK, (const byte*)"\xce\x10" "AF_PB8_USCI1_CLK")
QDEF(MP_QSTR_AF_PB9_BPWM1_CH2, (const byte*)"\xd6\x10" "AF_PB9_BPWM1_CH2")
QDEF(MP_QSTR_AF_PB9_EADC0_CH9, (const byte*)"\x77\x10" "AF_PB9_EADC0_CH9")
QDEF(MP_QSTR_AF_PB9_EBI0_ADR18, (const byte*)"\x96\x11" "AF_PB9_EBI0_ADR18")
QDEF(MP_QSTR_AF_PB9_EMAC0_RMII_TXD0, (const byte*)"\xb4\x16" "AF_PB9_EMAC0_RMII_TXD0")
QDEF(MP_QSTR_AF_PB9_I2C1_SMBAL, (const byte*)"\x4e\x11" "AF_PB9_I2C1_SMBAL")
QDEF(MP_QSTR_AF_PB9_INT7_INT, (const byte*)"\x41\x0f" "AF_PB9_INT7_INT")
QDEF(MP_QSTR_AF_PB9_SPI3_MISO, (const byte*)"\x57\x10" "AF_PB9_SPI3_MISO")
QDEF(MP_QSTR_AF_PB9_UART0_TXD, (const byte*)"\xbc\x10" "AF_PB9_UART0_TXD")
QDEF(MP_QSTR_AF_PB9_UART1_nCTS, (const byte*)"\x3f\x11" "AF_PB9_UART1_nCTS")
QDEF(MP_QSTR_AF_PB9_USCI1_CTL1, (const byte*)"\xa1\x11" "AF_PB9_USCI1_CTL1")
QDEF(MP_QSTR_AF_PC10_CAN1_TXD, (const byte*)"\xda\x10" "AF_PC10_CAN1_TXD")
QDEF(MP_QSTR_AF_PC10_EBI0_ADR6, (const byte*)"\x50\x11" "AF_PC10_EBI0_ADR6")
QDEF(MP_QSTR_AF_PC10_ECAP1_IC0, (const byte*)"\x13\x11" "AF_PC10_ECAP1_IC0")
QDEF(MP_QSTR_AF_PC10_EPWM1_CH2, (const byte*)"\xa8\x11" "AF_PC10_EPWM1_CH2")
QDEF(MP_QSTR_AF_PC10_SPI3_CLK, (const byte*)"\x32\x10" "AF_PC10_SPI3_CLK")
QDEF(MP_QSTR_AF_PC10_UART3_TXD, (const byte*)"\x86\x11" "AF_PC10_UART3_TXD")
QDEF(MP_QSTR_AF_PC11_ACMP1_O, (const byte*)"\x4f\x0f" "AF_PC11_ACMP1_O")
QDEF(MP_QSTR_AF_PC11_EBI0_ADR5, (const byte*)"\x52\x11" "AF_PC11_EBI0_ADR5")
QDEF(MP_QSTR_AF_PC11_ECAP1_IC1, (const byte*)"\x53\x11" "AF_PC11_ECAP1_IC1")
QDEF(MP_QSTR_AF_PC11_EPWM1_CH1, (const byte*)"\xaa\x11" "AF_PC11_EPWM1_CH1")
QDEF(MP_QSTR_AF_PC11_I2C0_SDA, (const byte*)"\xb0\x10" "AF_PC11_I2C0_SDA")
QDEF(MP_QSTR_AF_PC11_SPI3_MOSI, (const byte*)"\xef\x11" "AF_PC11_SPI3_MOSI")
QDEF(MP_QSTR_AF_PC11_UART0_RXD, (const byte*)"\xc2\x11" "AF_PC11_UART0_RXD")
QDEF(MP_QSTR_AF_PC12_ACMP0_O, (const byte*)"\x8d\x0f" "AF_PC12_ACMP0_O")
QDEF(MP_QSTR_AF_PC12_EBI0_ADR4, (const byte*)"\x50\x11" "AF_PC12_EBI0_ADR4")
QDEF(MP_QSTR_AF_PC12_ECAP1_IC2, (const byte*)"\x13\x11" "AF_PC12_ECAP1_IC2")
QDEF(MP_QSTR_AF_PC12_EPWM1_CH0, (const byte*)"\xa8\x11" "AF_PC12_EPWM1_CH0")
QDEF(MP_QSTR_AF_PC12_I2C0_SCL, (const byte*)"\xb9\x10" "AF_PC12_I2C0_SCL")
QDEF(MP_QSTR_AF_PC12_SC0_nCD, (const byte*)"\x44\x0f" "AF_PC12_SC0_nCD")
QDEF(MP_QSTR_AF_PC12_SPI3_MISO, (const byte*)"\xec\x11" "AF_PC12_SPI3_MISO")
QDEF(MP_QSTR_AF_PC12_UART0_TXD, (const byte*)"\x47\x11" "AF_PC12_UART0_TXD")
QDEF(MP_QSTR_AF_PC9_CAN1_RXD, (const byte*)"\x04\x0f" "AF_PC9_CAN1_RXD")
QDEF(MP_QSTR_AF_PC9_EBI0_ADR7, (const byte*)"\x89\x10" "AF_PC9_EBI0_ADR7")
QDEF(MP_QSTR_AF_PC9_EPWM1_CH3, (const byte*)"\xf1\x10" "AF_PC9_EPWM1_CH3")
QDEF(MP_QSTR_AF_PC9_SPI3_SS, (const byte*)"\x0e\x0e" "AF_PC9_SPI3_SS")
QDEF(MP_QSTR_AF_PC9_UART3_RXD, (const byte*)"\x58\x10" "AF_PC9_UART3_RXD")
QDEF(MP_QSTR_AF_PE4_BPWM0_CH2, (const byte*)"\x7d\x10" "AF_PE4_BPWM0_CH2")
QDEF(MP_QSTR_AF_PE4_EBI0_nWR, (const byte*)"\x09\x0f" "AF_PE4_EBI0_nWR")
QDEF(MP_QSTR_AF_PE4_EPWM0_CH3, (const byte*)"\x7b\x10" "AF_PE4_EPWM0_CH3")
QDEF(MP_QSTR_AF_PE4_QEI0_INDEX, (const byte*)"\xef\x11" "AF_PE4_QEI0_INDEX")
QDEF(MP_QSTR_AF_PE4_SC0_RST, (const byte*)"\xa9\x0e" "AF_PE4_SC0_RST")
QDEF(MP_QSTR_AF_PE4_SD0_DAT2, (const byte*)"\x38\x0f" "AF_PE4_SD0_DAT2")
QDEF(MP_QSTR_AF_PE4_SPI3_CLK, (const byte*)"\xc1\x0f" "AF_PE4_SPI3_CLK")
QDEF(MP_QSTR_AF_PE4_SPIM0_CLK, (const byte*)"\x8f\x10" "AF_PE4_SPIM0_CLK")
QDEF(MP_QSTR_AF_PE4_USCI0_DAT1, (const byte*)"\x40\x11" "AF_PE4_USCI0_DAT1")
QDEF(MP_QSTR_AF_PE5_BPWM0_CH3, (const byte*)"\xfd\x10" "AF_PE5_BPWM0_CH3")
QDEF(MP_QSTR_AF_PE5_EBI0_nRD, (const byte*)"\x5b\x0f" "AF_PE5_EBI0_nRD")
QDEF(MP_QSTR_AF_PE5_EPWM0_CH2, (const byte*)"\xfb\x10" "AF_PE5_EPWM0_CH2")
QDEF(MP_QSTR_AF_PE5_QEI1_B, (const byte*)"\xf3\x0d" "AF_PE5_QEI1_B")
QDEF(MP_QSTR_AF_PE5_SC0_PWR, (const byte*)"\xa8\x0e" "AF_PE5_SC0_PWR")
QDEF(MP_QSTR_AF_PE5_SD0_DAT3, (const byte*)"\x58\x0f" "AF_PE5_SD0_DAT3")
QDEF(MP_QSTR_AF_PE5_SPI3_SS, (const byte*)"\xc4\x0e" "AF_PE5_SPI3_SS")
QDEF(MP_QSTR_AF_PE5_SPIM0_SS, (const byte*)"\xaa\x0f" "AF_PE5_SPIM0_SS")
QDEF(MP_QSTR_AF_PE5_USCI0_CTL1, (const byte*)"\xcb\x11" "AF_PE5_USCI0_CTL1")
QDEF(MP_QSTR_AF_PF11_EBI0_ADR14, (const byte*)"\xc7\x12" "AF_PF11_EBI0_ADR14")
QDEF(MP_QSTR_AF_PF11_SPI2_MOSI, (const byte*)"\x8b\x11" "AF_PF11_SPI2_MOSI")
QDEF(MP_QSTR_AF_PF11_TAMPER5_TAMPER, (const byte*)"\xfe\x16" "AF_PF11_TAMPER5_TAMPER")
QDEF(MP_QSTR_AF_PF11_TMR3_TMR, (const byte*)"\xd8\x10" "AF_PF11_TMR3_TMR")
QDEF(MP_QSTR_AF_PG15_EADC0_ST, (const byte*)"\xba\x10" "AF_PG15_EADC0_ST")
QDEF(MP_QSTR_AF_PG15_SD1_nCD, (const byte*)"\x61\x0f" "AF_PG15_SD1_nCD")
QDEF(MP_QSTR_AF_PH0_EBI0_ADR7, (const byte*)"\x2b\x10" "AF_PH0_EBI0_ADR7")
QDEF(MP_QSTR_AF_PH0_TMR0_EXT, (const byte*)"\x87\x0f" "AF_PH0_TMR0_EXT")
QDEF(MP_QSTR_AF_PH0_UART5_TXD, (const byte*)"\xba\x10" "AF_PH0_UART5_TXD")
QDEF(MP_QSTR_AF_PH1_EBI0_ADR6, (const byte*)"\xab\x10" "AF_PH1_EBI0_ADR6")
QDEF(MP_QSTR_AF_PH1_TMR1_EXT, (const byte*)"\x27\x0f" "AF_PH1_TMR1_EXT")
QDEF(MP_QSTR_AF_PH1_UART5_RXD, (const byte*)"\x3d\x10" "AF_PH1_UART5_RXD")
QDEF(MP_QSTR_AF_PH2_EBI0_ADR5, (const byte*)"\x2b\x10" "AF_PH2_EBI0_ADR5")
QDEF(MP_QSTR_AF_PH2_I2C0_SCL, (const byte*)"\xc3\x0f" "AF_PH2_I2C0_SCL")
QDEF(MP_QSTR_AF_PH2_TMR2_EXT, (const byte*)"\x47\x0f" "AF_PH2_TMR2_EXT")
QDEF(MP_QSTR_AF_PH2_UART4_TXD, (const byte*)"\xf9\x10" "AF_PH2_UART4_TXD")
QDEF(MP_QSTR_AF_PH2_UART5_nRTS, (const byte*)"\x8b\x11" "AF_PH2_UART5_nRTS")
QDEF(MP_QSTR_B0, (const byte*)"\xf7\x02" "B0")
QDEF(MP_QSTR_B1, (const byte*)"\xf6\x02" "B1")
QDEF(MP_QSTR_B12, (const byte*)"\x84\x03" "B12")
QDEF(MP_QSTR_B2, (const byte*)"\xf5\x02" "B2")
QDEF(MP_QSTR_B3, (const byte*)"\xf4\x02" "B3")
QDEF(MP_QSTR_B6, (const byte*)"\xf1\x02" "B6")
QDEF(MP_QSTR_B7, (const byte*)"\xf0\x02" "B7")
QDEF(MP_QSTR_B8, (const byte*)"\xff\x02" "B8")
QDEF(MP_QSTR_B9, (const byte*)"\xfe\x02" "B9")
QDEF(MP_QSTR_C10, (const byte*)"\x47\x03" "C10")
QDEF(MP_QSTR_C11, (const byte*)"\x46\x03" "C11")
QDEF(MP_QSTR_C12, (const byte*)"\x45\x03" "C12")
QDEF(MP_QSTR_C9, (const byte*)"\x9f\x02" "C9")
QDEF(MP_QSTR_D0, (const byte*)"\x31\x02" "D0")
QDEF(MP_QSTR_D1, (const byte*)"\x30\x02" "D1")
QDEF(MP_QSTR_D10, (const byte*)"\x01\x03" "D10")
QDEF(MP_QSTR_D11, (const byte*)"\x01\x03" "D11")
QDEF(MP_QSTR_D12, (const byte*)"\x02\x03" "D12")
QDEF(MP_QSTR_D13, (const byte*)"\x03\x03" "D13")
QDEF(MP_QSTR_D2, (const byte*)"\x33\x02" "D2")
QDEF(MP_QSTR_D3, (const byte*)"\x32\x02" "D3")
QDEF(MP_QSTR_D4, (const byte*)"\x35\x02" "D4")
QDEF(MP_QSTR_D5, (const byte*)"\x34\x02" "D5")
QDEF(MP_QSTR_D6, (const byte*)"\x37\x02" "D6")
QDEF(MP_QSTR_D7, (const byte*)"\x36\x02" "D7")
QDEF(MP_QSTR_D8, (const byte*)"\x39\x02" "D8")
QDEF(MP_QSTR_D9, (const byte*)"\x38\x02" "D9")
QDEF(MP_QSTR_DAC0_OUT, (const byte*)"\xc2\x08" "DAC0_OUT")
QDEF(MP_QSTR_E4, (const byte*)"\xd4\x02" "E4")
QDEF(MP_QSTR_E5, (const byte*)"\xd5\x02" "E5")
QDEF(MP_QSTR_F11, (const byte*)"\x83\x03" "F11")
QDEF(MP_QSTR_G15, (const byte*)"\x46\x03" "G15")
QDEF(MP_QSTR_H0, (const byte*)"\xbd\x02" "H0")
QDEF(MP_QSTR_H1, (const byte*)"\xbc\x02" "H1")
QDEF(MP_QSTR_H2, (const byte*)"\xbf\x02" "H2")
QDEF(MP_QSTR_LEDG, (const byte*)"\xcf\x04" "LEDG")
QDEF(MP_QSTR_LEDR, (const byte*)"\xda\x04" "LEDR")
QDEF(MP_QSTR_LEDY, (const byte*)"\xd1\x04" "LEDY")
QDEF(MP_QSTR_SW2, (const byte*)"\x33\x03" "SW2")
QDEF(MP_QSTR_SW3, (const byte*)"\x32\x03" "SW3")
QDEF(MP_QSTR_ADC, (const byte*)"\x63\x03" "ADC")
QDEF(MP_QSTR_ADCALL, (const byte*)"\x02\x06" "ADCALL")
QDEF(MP_QSTR_ADCAll, (const byte*)"\x02\x06" "ADCAll")
QDEF(MP_QSTR_AF_INET, (const byte*)"\xeb\x07" "AF_INET")
QDEF(MP_QSTR_ALT, (const byte*)"\x7c\x03" "ALT")
QDEF(MP_QSTR_ALT_OPEN_DRAIN, (const byte*)"\xf8\x0e" "ALT_OPEN_DRAIN")
QDEF(MP_QSTR_ARRAY, (const byte*)"\x5c\x05" "ARRAY")
QDEF(MP_QSTR_ArithmeticError, (const byte*)"\x2d\x0f" "ArithmeticError")
QDEF(MP_QSTR_AssertionError, (const byte*)"\x97\x0e" "AssertionError")
QDEF(MP_QSTR_AttributeError, (const byte*)"\x21\x0e" "AttributeError")
QDEF(MP_QSTR_BFINT16, (const byte*)"\x95\x07" "BFINT16")
QDEF(MP_QSTR_BFINT32, (const byte*)"\x53\x07" "BFINT32")
QDEF(MP_QSTR_BFINT8, (const byte*)"\x4a\x06" "BFINT8")
QDEF(MP_QSTR_BFUINT16, (const byte*)"\x40\x08" "BFUINT16")
QDEF(MP_QSTR_BFUINT32, (const byte*)"\x06\x08" "BFUINT32")
QDEF(MP_QSTR_BFUINT8, (const byte*)"\xbf\x07" "BFUINT8")
QDEF(MP_QSTR_BF_LEN, (const byte*)"\x19\x06" "BF_LEN")
QDEF(MP_QSTR_BF_POS, (const byte*)"\x52\x06" "BF_POS")
QDEF(MP_QSTR_BIG_ENDIAN, (const byte*)"\xff\x0a" "BIG_ENDIAN")
QDEF(MP_QSTR_BOTH, (const byte*)"\x14\x04" "BOTH")
QDEF(MP_QSTR_BUS_OFF, (const byte*)"\x71\x07" "BUS_OFF")
QDEF(MP_QSTR_BaseException, (const byte*)"\x07\x0d" "BaseException")
QDEF(MP_QSTR_BytesIO, (const byte*)"\x1a\x07" "BytesIO")
QDEF(MP_QSTR_CAN, (const byte*)"\x89\x03" "CAN")
QDEF(MP_QSTR_CB_REASON_ERROR_BUS_OFF, (const byte*)"\xd3\x17" "CB_REASON_ERROR_BUS_OFF")
QDEF(MP_QSTR_CB_REASON_ERROR_PASSIVE, (const byte*)"\x4c\x17" "CB_REASON_ERROR_PASSIVE")
QDEF(MP_QSTR_CB_REASON_ERROR_WARNING, (const byte*)"\x2d\x17" "CB_REASON_ERROR_WARNING")
QDEF(MP_QSTR_CB_REASON_RX, (const byte*)"\x0a\x0c" "CB_REASON_RX")
QDEF(MP_QSTR_CONTINUOUS, (const byte*)"\x48\x0a" "CONTINUOUS")
QDEF(MP_QSTR_CTS, (const byte*)"\x61\x03" "CTS")
QDEF(MP_QSTR_DEBUG, (const byte*)"\x34\x05" "DEBUG")
QDEF(MP_QSTR_DecompIO, (const byte*)"\x93\x08" "DecompIO")
QDEF(MP_QSTR_EACCES, (const byte*)"\x37\x06" "EACCES")
QDEF(MP_QSTR_EADDRINUSE, (const byte*)"\x17\x0a" "EADDRINUSE")
QDEF(MP_QSTR_EAGAIN, (const byte*)"\x20\x06" "EAGAIN")
QDEF(MP_QSTR_EALREADY, (const byte*)"\x46\x08" "EALREADY")
QDEF(MP_QSTR_EBADF, (const byte*)"\x61\x05" "EBADF")
QDEF(MP_QSTR_ECONNABORTED, (const byte*)"\x27\x0c" "ECONNABORTED")
QDEF(MP_QSTR_ECONNREFUSED, (const byte*)"\x3a\x0c" "ECONNREFUSED")
QDEF(MP_QSTR_ECONNRESET, (const byte*)"\x19\x0a" "ECONNRESET")
QDEF(MP_QSTR_EEXIST, (const byte*)"\x53\x06" "EEXIST")
QDEF(MP_QSTR_EHOSTUNREACH, (const byte*)"\x86\x0c" "EHOSTUNREACH")
QDEF(MP_QSTR_EINPROGRESS, (const byte*)"\x9a\x0b" "EINPROGRESS")
QDEF(MP_QSTR_EINVAL, (const byte*)"\x5c\x06" "EINVAL")
QDEF(MP_QSTR_EIO, (const byte*)"\x86\x03" "EIO")
QDEF(MP_QSTR_EISDIR, (const byte*)"\xa5\x06" "EISDIR")
QDEF(MP_QSTR_ENOBUFS, (const byte*)"\xe3\x07" "ENOBUFS")
QDEF(MP_QSTR_ENODEV, (const byte*)"\xb6\x06" "ENODEV")
QDEF(MP_QSTR_ENOENT, (const byte*)"\x5e\x06" "ENOENT")
QDEF(MP_QSTR_ENOMEM, (const byte*)"\xa4\x06" "ENOMEM")
QDEF(MP_QSTR_ENOTCONN, (const byte*)"\x79\x08" "ENOTCONN")
QDEF(MP_QSTR_EOFError, (const byte*)"\x91\x08" "EOFError")
QDEF(MP_QSTR_EOPNOTSUPP, (const byte*)"\xac\x0a" "EOPNOTSUPP")
QDEF(MP_QSTR_EPERM, (const byte*)"\xea\x05" "EPERM")
QDEF(MP_QSTR_ERROR_ACTIVE, (const byte*)"\x8e\x0c" "ERROR_ACTIVE")
QDEF(MP_QSTR_ERROR_PASSIVE, (const byte*)"\x29\x0d" "ERROR_PASSIVE")
QDEF(MP_QSTR_ERROR_WARNING, (const byte*)"\xc8\x0d" "ERROR_WARNING")
QDEF(MP_QSTR_ETIMEDOUT, (const byte*)"\xff\x09" "ETIMEDOUT")
QDEF(MP_QSTR_Ellipsis, (const byte*)"\xf0\x08" "Ellipsis")
QDEF(MP_QSTR_Exception, (const byte*)"\xf2\x09" "Exception")
QDEF(MP_QSTR_FALLING, (const byte*)"\x02\x07" "FALLING")
QDEF(MP_QSTR_FLOAT32, (const byte*)"\xb4\x07" "FLOAT32")
QDEF(MP_QSTR_FLOAT64, (const byte*)"\x17\x07" "FLOAT64")
QDEF(MP_QSTR_False, (const byte*)"\x38\x05" "False")
QDEF(MP_QSTR_FileIO, (const byte*)"\xc5\x06" "FileIO")
QDEF(MP_QSTR_Flash, (const byte*)"\x95\x05" "Flash")
QDEF(MP_QSTR_GeneratorExit, (const byte*)"\x16\x0d" "GeneratorExit")
QDEF(MP_QSTR_HID, (const byte*)"\x01\x03" "HID")
QDEF(MP_QSTR_I2C, (const byte*)"\x5d\x03" "I2C")
QDEF(MP_QSTR_IC, (const byte*)"\x2f\x02" "IC")
QDEF(MP_QSTR_IN, (const byte*)"\x22\x02" "IN")
QDEF(MP_QSTR_INT, (const byte*)"\x36\x03" "INT")
QDEF(MP_QSTR_INT16, (const byte*)"\x91\x05" "INT16")
QDEF(MP_QSTR_INT32, (const byte*)"\x57\x05" "INT32")
QDEF(MP_QSTR_INT64, (const byte*)"\xf4\x05" "INT64")
QDEF(MP_QSTR_INT8, (const byte*)"\xce\x04" "INT8")
QDEF(MP_QSTR_IPPROTO_IP, (const byte*)"\x0c\x0a" "IPPROTO_IP")
QDEF(MP_QSTR_IPPROTO_TCP, (const byte*)"\xb2\x0b" "IPPROTO_TCP")
QDEF(MP_QSTR_IPPROTO_UDP, (const byte*)"\x54\x0b" "IPPROTO_UDP")
QDEF(MP_QSTR_IRQ_FALLING, (const byte*)"\x37\x0b" "IRQ_FALLING")
QDEF(MP_QSTR_IRQ_HIGH, (const byte*)"\x3e\x08" "IRQ_HIGH")
QDEF(MP_QSTR_IRQ_LOW, (const byte*)"\xe4\x07" "IRQ_LOW")
QDEF(MP_QSTR_IRQ_RISING, (const byte*)"\x78\x0a" "IRQ_RISING")
QDEF(MP_QSTR_ImportError, (const byte*)"\x20\x0b" "ImportError")
QDEF(MP_QSTR_IndentationError, (const byte*)"\x5c\x10" "IndentationError")
QDEF(MP_QSTR_IndexError, (const byte*)"\x83\x0a" "IndexError")
QDEF(MP_QSTR_KeyError, (const byte*)"\xea\x08" "KeyError")
QDEF(MP_QSTR_KeyboardInterrupt, (const byte*)"\xaf\x11" "KeyboardInterrupt")
QDEF(MP_QSTR_LAN, (const byte*)"\x06\x03" "LAN")
QDEF(MP_QSTR_LED, (const byte*)"\x88\x03" "LED")
QDEF(MP_QSTR_LITTLE_ENDIAN, (const byte*)"\xbf\x0d" "LITTLE_ENDIAN")
QDEF(MP_QSTR_LONG, (const byte*)"\x0f\x04" "LONG")
QDEF(MP_QSTR_LONGLONG, (const byte*)"\x85\x08" "LONGLONG")
QDEF(MP_QSTR_LOOPBACK, (const byte*)"\x12\x08" "LOOPBACK")
QDEF(MP_QSTR_LSB, (const byte*)"\xd8\x03" "LSB")
QDEF(MP_QSTR_LockType, (const byte*)"\x36\x08" "LockType")
QDEF(MP_QSTR_LookupError, (const byte*)"\xff\x0b" "LookupError")
QDEF(MP_QSTR_MASTER, (const byte*)"\x39\x06" "MASTER")
QDEF(MP_QSTR_MSB, (const byte*)"\x59\x03" "MSB")
QDEF(MP_QSTR_MemoryError, (const byte*)"\xdc\x0b" "MemoryError")
QDEF(MP_QSTR_NATIVE, (const byte*)"\x04\x06" "NATIVE")
QDEF(MP_QSTR_NORMAL, (const byte*)"\xf6\x06" "NORMAL")
QDEF(MP_QSTR_NameError, (const byte*)"\xba\x09" "NameError")
QDEF(MP_QSTR_NoneType, (const byte*)"\x17\x08" "NoneType")
QDEF(MP_QSTR_NotImplementedError, (const byte*)"\xc6\x13" "NotImplementedError")
QDEF(MP_QSTR_OC_TOGGLE, (const byte*)"\x64\x09" "OC_TOGGLE")
QDEF(MP_QSTR_ONESHOT, (const byte*)"\x61\x07" "ONESHOT")
QDEF(MP_QSTR_OPEN_DRAIN, (const byte*)"\x5e\x0a" "OPEN_DRAIN")
QDEF(MP_QSTR_OSError, (const byte*)"\xa1\x07" "OSError")
QDEF(MP_QSTR_OUT, (const byte*)"\x0b\x03" "OUT")
QDEF(MP_QSTR_OrderedDict, (const byte*)"\xf0\x0b" "OrderedDict")
QDEF(MP_QSTR_OverflowError, (const byte*)"\x81\x0d" "OverflowError")
QDEF(MP_QSTR_PERIODIC, (const byte*)"\x0a\x08" "PERIODIC")
QDEF(MP_QSTR_POLLERR, (const byte*)"\xdf\x07" "POLLERR")
QDEF(MP_QSTR_POLLHUP, (const byte*)"\x77\x07" "POLLHUP")
QDEF(MP_QSTR_POLLIN, (const byte*)"\x7d\x06" "POLLIN")
QDEF(MP_QSTR_POLLOUT, (const byte*)"\x74\x07" "POLLOUT")
QDEF(MP_QSTR_PTR, (const byte*)"\xb3\x03" "PTR")
QDEF(MP_QSTR_PULL_DOWN, (const byte*)"\xad\x09" "PULL_DOWN")
QDEF(MP_QSTR_PULL_NONE, (const byte*)"\x55\x09" "PULL_NONE")
QDEF(MP_QSTR_PULL_UP, (const byte*)"\xba\x07" "PULL_UP")
QDEF(MP_QSTR_PWM, (const byte*)"\x4f\x03" "PWM")
QDEF(MP_QSTR_Pin, (const byte*)"\x12\x03" "Pin")
QDEF(MP_QSTR_PinAF, (const byte*)"\x35\x05" "PinAF")
QDEF(MP_QSTR_PinBase, (const byte*)"\x47\x07" "PinBase")
QDEF(MP_QSTR_QUASI, (const byte*)"\xfa\x05" "QUASI")
QDEF(MP_QSTR_RISING, (const byte*)"\x2d\x06" "RISING")
QDEF(MP_QSTR_RTC, (const byte*)"\xa0\x03" "RTC")
QDEF(MP_QSTR_RTS, (const byte*)"\xb0\x03" "RTS")
QDEF(MP_QSTR_RuntimeError, (const byte*)"\x61\x0c" "RuntimeError")
QDEF(MP_QSTR_SDCard, (const byte*)"\xa6\x06" "SDCard")
QDEF(MP_QSTR_SHORT, (const byte*)"\xf7\x05" "SHORT")
QDEF(MP_QSTR_SILENT, (const byte*)"\x6c\x06" "SILENT")
QDEF(MP_QSTR_SILENT_LOOPBACK, (const byte*)"\x24\x0f" "SILENT_LOOPBACK")
QDEF(MP_QSTR_SLAVE, (const byte*)"\x68\x05" "SLAVE")
QDEF(MP_QSTR_SOCK_DGRAM, (const byte*)"\xb3\x0a" "SOCK_DGRAM")
QDEF(MP_QSTR_SOCK_RAW, (const byte*)"\xca\x08" "SOCK_RAW")
QDEF(MP_QSTR_SOCK_STREAM, (const byte*)"\x32\x0b" "SOCK_STREAM")
QDEF(MP_QSTR_SOL_SOCKET, (const byte*)"\x0f\x0a" "SOL_SOCKET")
QDEF(MP_QSTR_SO_REUSEADDR, (const byte*)"\x21\x0c" "SO_REUSEADDR")
QDEF(MP_QSTR_SPI, (const byte*)"\xef\x03" "SPI")
QDEF(MP_QSTR_STOPPED, (const byte*)"\x4c\x07" "STOPPED")
QDEF(MP_QSTR_Signal, (const byte*)"\x9b\x06" "Signal")
QDEF(MP_QSTR_SoftSPI, (const byte*)"\x21\x07" "SoftSPI")
QDEF(MP_QSTR_StopIteration, (const byte*)"\xea\x0d" "StopIteration")
QDEF(MP_QSTR_StringIO, (const byte*)"\x76\x08" "StringIO")
QDEF(MP_QSTR_Switch, (const byte*)"\x97\x06" "Switch")
QDEF(MP_QSTR_SyntaxError, (const byte*)"\x94\x0b" "SyntaxError")
QDEF(MP_QSTR_SystemExit, (const byte*)"\x20\x0a" "SystemExit")
QDEF(MP_QSTR_TextIOWrapper, (const byte*)"\xad\x0d" "TextIOWrapper")
QDEF(MP_QSTR_Timer, (const byte*)"\xa2\x05" "Timer")
QDEF(MP_QSTR_TimerChannel, (const byte*)"\x41\x0c" "TimerChannel")
QDEF(MP_QSTR_True, (const byte*)"\x13\x04" "True")
QDEF(MP_QSTR_TypeError, (const byte*)"\x25\x09" "TypeError")
QDEF(MP_QSTR_UART, (const byte*)"\xb7\x04" "UART")
QDEF(MP_QSTR_UINT, (const byte*)"\x23\x04" "UINT")
QDEF(MP_QSTR_UINT16, (const byte*)"\xc4\x06" "UINT16")
QDEF(MP_QSTR_UINT32, (const byte*)"\x82\x06" "UINT32")
QDEF(MP_QSTR_UINT64, (const byte*)"\x61\x06" "UINT64")
QDEF(MP_QSTR_UINT8, (const byte*)"\xbb\x05" "UINT8")
QDEF(MP_QSTR_ULONG, (const byte*)"\x7a\x05" "ULONG")
QDEF(MP_QSTR_ULONGLONG, (const byte*)"\x70\x09" "ULONGLONG")
QDEF(MP_QSTR_USB_HID, (const byte*)"\x5b\x07" "USB_HID")
QDEF(MP_QSTR_USB_VCP, (const byte*)"\x1b\x07" "USB_VCP")
QDEF(MP_QSTR_USHORT, (const byte*)"\xa2\x06" "USHORT")
QDEF(MP_QSTR_VCP, (const byte*)"\x40\x03" "VCP")
QDEF(MP_QSTR_VCP_plus_HID, (const byte*)"\x3f\x0c" "VCP_plus_HID")
QDEF(MP_QSTR_VOID, (const byte*)"\x31\x04" "VOID")
QDEF(MP_QSTR_ValueError, (const byte*)"\x96\x0a" "ValueError")
QDEF(MP_QSTR_VfsFat, (const byte*)"\x15\x06" "VfsFat")
QDEF(MP_QSTR_ZeroDivisionError, (const byte*)"\xb6\x11" "ZeroDivisionError")
QDEF(MP_QSTR__thread, (const byte*)"\xd4\x07" "_thread")
QDEF(MP_QSTR_a2b_base64, (const byte*)"\x3c\x0a" "a2b_base64")
QDEF(MP_QSTR_abs, (const byte*)"\x95\x03" "abs")
QDEF(MP_QSTR_accept, (const byte*)"\x85\x06" "accept")
QDEF(MP_QSTR_acos, (const byte*)"\x1b\x04" "acos")
QDEF(MP_QSTR_acquire, (const byte*)"\x1d\x07" "acquire")
QDEF(MP_QSTR_active, (const byte*)"\x69\x06" "active")
QDEF(MP_QSTR_addr, (const byte*)"\xb6\x04" "addr")
QDEF(MP_QSTR_addr_size, (const byte*)"\x4c\x09" "addr_size")
QDEF(MP_QSTR_addressof, (const byte*)"\x5a\x09" "addressof")
QDEF(MP_QSTR_addrsize, (const byte*)"\x93\x08" "addrsize")
QDEF(MP_QSTR_af, (const byte*)"\x22\x02" "af")
QDEF(MP_QSTR_af_list, (const byte*)"\x5f\x07" "af_list")
QDEF(MP_QSTR_all, (const byte*)"\x44\x03" "all")
QDEF(MP_QSTR_allocate_lock, (const byte*)"\xec\x0d" "allocate_lock")
QDEF(MP_QSTR_alt, (const byte*)"\x5c\x03" "alt")
QDEF(MP_QSTR_any, (const byte*)"\x13\x03" "any")
QDEF(MP_QSTR_append, (const byte*)"\x6b\x06" "append")
QDEF(MP_QSTR_arg, (const byte*)"\x91\x03" "arg")
QDEF(MP_QSTR_args, (const byte*)"\xc2\x04" "args")
QDEF(MP_QSTR_argv, (const byte*)"\xc7\x04" "argv")
QDEF(MP_QSTR_array, (const byte*)"\x7c\x05" "array")
QDEF(MP_QSTR_asin, (const byte*)"\x50\x04" "asin")
QDEF(MP_QSTR_atan, (const byte*)"\x1f\x04" "atan")
QDEF(MP_QSTR_atan2, (const byte*)"\xcd\x05" "atan2")
QDEF(MP_QSTR_b2a_base64, (const byte*)"\x3c\x0a" "b2a_base64")
QDEF(MP_QSTR_baudrate, (const byte*)"\xf5\x08" "baudrate")
QDEF(MP_QSTR_bin, (const byte*)"\xe0\x03" "bin")
QDEF(MP_QSTR_bind, (const byte*)"\x84\x04" "bind")
QDEF(MP_QSTR_bits, (const byte*)"\x49\x04" "bits")
QDEF(MP_QSTR_board, (const byte*)"\x7f\x05" "board")
QDEF(MP_QSTR_bool, (const byte*)"\xeb\x04" "bool")
QDEF(MP_QSTR_bound_method, (const byte*)"\x97\x0c" "bound_method")
QDEF(MP_QSTR_buffer, (const byte*)"\xe5\x06" "buffer")
QDEF(MP_QSTR_buffering, (const byte*)"\x25\x09" "buffering")
QDEF(MP_QSTR_builtins, (const byte*)"\xf7\x08" "builtins")
QDEF(MP_QSTR_bytearray, (const byte*)"\x76\x09" "bytearray")
QDEF(MP_QSTR_bytearray_at, (const byte*)"\x9c\x0c" "bytearray_at")
QDEF(MP_QSTR_bytecode, (const byte*)"\x22\x08" "bytecode")
QDEF(MP_QSTR_byteorder, (const byte*)"\x61\x09" "byteorder")
QDEF(MP_QSTR_bytes, (const byte*)"\x5c\x05" "bytes")
QDEF(MP_QSTR_bytes_at, (const byte*)"\xb6\x08" "bytes_at")
QDEF(MP_QSTR_calcsize, (const byte*)"\x4d\x08" "calcsize")
QDEF(MP_QSTR_calibration, (const byte*)"\xaf\x0b" "calibration")
QDEF(MP_QSTR_callable, (const byte*)"\x0d\x08" "callable")
QDEF(MP_QSTR_callback, (const byte*)"\x4c\x08" "callback")
QDEF(MP_QSTR_capture, (const byte*)"\x61\x07" "capture")
QDEF(MP_QSTR_ceil, (const byte*)"\x06\x04" "ceil")
QDEF(MP_QSTR_channel, (const byte*)"\x26\x07" "channel")
QDEF(MP_QSTR_chdir, (const byte*)"\xb1\x05" "chdir")
QDEF(MP_QSTR_chr, (const byte*)"\xdc\x03" "chr")
QDEF(MP_QSTR_classmethod, (const byte*)"\xb4\x0b" "classmethod")
QDEF(MP_QSTR_clear, (const byte*)"\x7c\x05" "clear")
QDEF(MP_QSTR_close, (const byte*)"\x33\x05" "close")
QDEF(MP_QSTR_closure, (const byte*)"\x74\x07" "closure")
QDEF(MP_QSTR_cmath, (const byte*)"\xb6\x05" "cmath")
QDEF(MP_QSTR_collect, (const byte*)"\x9b\x07" "collect")
QDEF(MP_QSTR_compare, (const byte*)"\x22\x07" "compare")
QDEF(MP_QSTR_compile, (const byte*)"\xf4\x07" "compile")
QDEF(MP_QSTR_complex, (const byte*)"\xc5\x07" "complex")
QDEF(MP_QSTR_connect, (const byte*)"\xdb\x07" "connect")
QDEF(MP_QSTR_const, (const byte*)"\xc0\x05" "const")
QDEF(MP_QSTR_copy, (const byte*)"\xe0\x04" "copy")
QDEF(MP_QSTR_copysign, (const byte*)"\x33\x08" "copysign")
QDEF(MP_QSTR_cos, (const byte*)"\x7a\x03" "cos")
QDEF(MP_QSTR_count, (const byte*)"\xa6\x05" "count")
QDEF(MP_QSTR_counter, (const byte*)"\x11\x07" "counter")
QDEF(MP_QSTR_cpu, (const byte*)"\xc3\x03" "cpu")
QDEF(MP_QSTR_data, (const byte*)"\x15\x04" "data")
QDEF(MP_QSTR_datetime, (const byte*)"\xe4\x08" "datetime")
QDEF(MP_QSTR_debug, (const byte*)"\xd4\x05" "debug")
QDEF(MP_QSTR_decompress, (const byte*)"\x62\x0a" "decompress")
QDEF(MP_QSTR_degrees, (const byte*)"\x02\x07" "degrees")
QDEF(MP_QSTR_deinit, (const byte*)"\x9e\x06" "deinit")
QDEF(MP_QSTR_delay, (const byte*)"\x50\x05" "delay")
QDEF(MP_QSTR_deque, (const byte*)"\x05\x05" "deque")
QDEF(MP_QSTR_dict, (const byte*)"\x3f\x04" "dict")
QDEF(MP_QSTR_dict_view, (const byte*)"\x2d\x09" "dict_view")
QDEF(MP_QSTR_digest, (const byte*)"\xcd\x06" "digest")
QDEF(MP_QSTR_dir, (const byte*)"\xfa\x03" "dir")
QDEF(MP_QSTR_disable, (const byte*)"\x91\x07" "disable")
QDEF(MP_QSTR_disable_irq, (const byte*)"\x04\x0b" "disable_irq")
QDEF(MP_QSTR_divmod, (const byte*)"\xb8\x06" "divmod")
QDEF(MP_QSTR_dump, (const byte*)"\xe9\x04" "dump")
QDEF(MP_QSTR_dumps, (const byte*)"\x7a\x05" "dumps")
QDEF(MP_QSTR_e, (const byte*)"\xc0\x01" "e")
QDEF(MP_QSTR_elapsed_micros, (const byte*)"\x39\x0e" "elapsed_micros")
QDEF(MP_QSTR_elapsed_millis, (const byte*)"\x8e\x0e" "elapsed_millis")
QDEF(MP_QSTR_enable, (const byte*)"\x04\x06" "enable")
QDEF(MP_QSTR_enable_irq, (const byte*)"\x91\x0a" "enable_irq")
QDEF(MP_QSTR_encoding, (const byte*)"\x06\x08" "encoding")
QDEF(MP_QSTR_end, (const byte*)"\x0a\x03" "end")
QDEF(MP_QSTR_endswith, (const byte*)"\x1b\x08" "endswith")
QDEF(MP_QSTR_errorcode, (const byte*)"\x10\x09" "errorcode")
QDEF(MP_QSTR_eval, (const byte*)"\x9b\x04" "eval")
QDEF(MP_QSTR_exec, (const byte*)"\x1e\x04" "exec")
QDEF(MP_QSTR_exit, (const byte*)"\x85\x04" "exit")
QDEF(MP_QSTR_exp, (const byte*)"\xc8\x03" "exp")
QDEF(MP_QSTR_extend, (const byte*)"\x63\x06" "extend")
QDEF(MP_QSTR_extframe, (const byte*)"\x11\x08" "extframe")
QDEF(MP_QSTR_fabs, (const byte*)"\x93\x04" "fabs")
QDEF(MP_QSTR_fifo, (const byte*)"\x03\x04" "fifo")
QDEF(MP_QSTR_file, (const byte*)"\xc3\x04" "file")
QDEF(MP_QSTR_fileno, (const byte*)"\x82\x06" "fileno")
QDEF(MP_QSTR_find, (const byte*)"\x01\x04" "find")
QDEF(MP_QSTR_firstbit, (const byte*)"\x20\x08" "firstbit")
QDEF(MP_QSTR_float, (const byte*)"\x35\x05" "float")
QDEF(MP_QSTR_floor, (const byte*)"\x7d\x05" "floor")
QDEF(MP_QSTR_flow, (const byte*)"\x37\x04" "flow")
QDEF(MP_QSTR_flush, (const byte*)"\x61\x05" "flush")
QDEF(MP_QSTR_fmod, (const byte*)"\xe5\x04" "fmod")
QDEF(MP_QSTR_format, (const byte*)"\x26\x06" "format")
QDEF(MP_QSTR_freq, (const byte*)"\xe5\x04" "freq")
QDEF(MP_QSTR_frexp, (const byte*)"\x1c\x05" "frexp")
QDEF(MP_QSTR_from_bytes, (const byte*)"\x35\x0a" "from_bytes")
QDEF(MP_QSTR_fromkeys, (const byte*)"\x37\x08" "fromkeys")
QDEF(MP_QSTR_function, (const byte*)"\x27\x08" "function")
QDEF(MP_QSTR_gc, (const byte*)"\x61\x02" "gc")
QDEF(MP_QSTR_gencall, (const byte*)"\x8b\x07" "gencall")
QDEF(MP_QSTR_generator, (const byte*)"\x96\x09" "generator")
QDEF(MP_QSTR_get, (const byte*)"\x33\x03" "get")
QDEF(MP_QSTR_get_ident, (const byte*)"\xfe\x09" "get_ident")
QDEF(MP_QSTR_getaddrinfo, (const byte*)"\x6e\x0b" "getaddrinfo")
QDEF(MP_QSTR_getattr, (const byte*)"\xc0\x07" "getattr")
QDEF(MP_QSTR_getcwd, (const byte*)"\x03\x06" "getcwd")
QDEF(MP_QSTR_getvalue, (const byte*)"\x78\x08" "getvalue")
QDEF(MP_QSTR_globals, (const byte*)"\x9d\x07" "globals")
QDEF(MP_QSTR_gpio, (const byte*)"\x54\x04" "gpio")
QDEF(MP_QSTR_group, (const byte*)"\xba\x05" "group")
QDEF(MP_QSTR_handler, (const byte*)"\xdd\x07" "handler")
QDEF(MP_QSTR_hard, (const byte*)"\xda\x04" "hard")
QDEF(MP_QSTR_hasattr, (const byte*)"\x8c\x07" "hasattr")
QDEF(MP_QSTR_hash, (const byte*)"\xb7\x04" "hash")
QDEF(MP_QSTR_heap_lock, (const byte*)"\xad\x09" "heap_lock")
QDEF(MP_QSTR_heap_unlock, (const byte*)"\x56\x0b" "heap_unlock")
QDEF(MP_QSTR_heapify, (const byte*)"\xaf\x07" "heapify")
QDEF(MP_QSTR_heappop, (const byte*)"\xd6\x07" "heappop")
QDEF(MP_QSTR_heappush, (const byte*)"\x87\x08" "heappush")
QDEF(MP_QSTR_hex, (const byte*)"\x70\x03" "hex")
QDEF(MP_QSTR_hexlify, (const byte*)"\x2a\x07" "hexlify")
QDEF(MP_QSTR_high, (const byte*)"\x2b\x04" "high")
QDEF(MP_QSTR_id, (const byte*)"\x28\x02" "id")
QDEF(MP_QSTR_ifconfig, (const byte*)"\xe0\x08" "ifconfig")
QDEF(MP_QSTR_ilistdir, (const byte*)"\x71\x08" "ilistdir")
QDEF(MP_QSTR_imag, (const byte*)"\x47\x04" "imag")
QDEF(MP_QSTR_implementation, (const byte*)"\x17\x0e" "implementation")
QDEF(MP_QSTR_index, (const byte*)"\x7b\x05" "index")
QDEF(MP_QSTR_info, (const byte*)"\xeb\x04" "info")
QDEF(MP_QSTR_init, (const byte*)"\x1f\x04" "init")
QDEF(MP_QSTR_insert, (const byte*)"\x12\x06" "insert")
QDEF(MP_QSTR_int, (const byte*)"\x16\x03" "int")
QDEF(MP_QSTR_intensity, (const byte*)"\xca\x09" "intensity")
QDEF(MP_QSTR_invert, (const byte*)"\xb7\x06" "invert")
QDEF(MP_QSTR_ioctl, (const byte*)"\x78\x05" "ioctl")
QDEF(MP_QSTR_ipoll, (const byte*)"\x53\x05" "ipoll")
QDEF(MP_QSTR_irq, (const byte*)"\x8f\x03" "irq")
QDEF(MP_QSTR_is_ready, (const byte*)"\x0b\x08" "is_ready")
QDEF(MP_QSTR_isalpha, (const byte*)"\xeb\x07" "isalpha")
QDEF(MP_QSTR_isconnected, (const byte*)"\x80\x0b" "isconnected")
QDEF(MP_QSTR_isdigit, (const byte*)"\xa8\x07" "isdigit")
QDEF(MP_QSTR_isenabled, (const byte*)"\x9a\x09" "isenabled")
QDEF(MP_QSTR_isfinite, (const byte*)"\xa6\x08" "isfinite")
QDEF(MP_QSTR_isinf, (const byte*)"\x3e\x05" "isinf")
QDEF(MP_QSTR_isinstance, (const byte*)"\xb6\x0a" "isinstance")
QDEF(MP_QSTR_islower, (const byte*)"\xfc\x07" "islower")
QDEF(MP_QSTR_isnan, (const byte*)"\x9e\x05" "isnan")
QDEF(MP_QSTR_isspace, (const byte*)"\x5b\x07" "isspace")
QDEF(MP_QSTR_issubclass, (const byte*)"\xb5\x0a" "issubclass")
QDEF(MP_QSTR_isupper, (const byte*)"\xdd\x07" "isupper")
QDEF(MP_QSTR_items, (const byte*)"\xe3\x05" "items")
QDEF(MP_QSTR_iter, (const byte*)"\x8f\x04" "iter")
QDEF(MP_QSTR_iterator, (const byte*)"\x47\x08" "iterator")
QDEF(MP_QSTR_join, (const byte*)"\xa7\x04" "join")
QDEF(MP_QSTR_key, (const byte*)"\x32\x03" "key")
QDEF(MP_QSTR_keys, (const byte*)"\x01\x04" "keys")
QDEF(MP_QSTR_ldexp, (const byte*)"\x40\x05" "ldexp")
QDEF(MP_QSTR_len, (const byte*)"\x62\x03" "len")
QDEF(MP_QSTR_list, (const byte*)"\x27\x04" "list")
QDEF(MP_QSTR_listdir, (const byte*)"\x98\x07" "listdir")
QDEF(MP_QSTR_listen, (const byte*)"\xcc\x06" "listen")
QDEF(MP_QSTR_little, (const byte*)"\x89\x06" "little")
QDEF(MP_QSTR_load, (const byte*)"\x63\x04" "load")
QDEF(MP_QSTR_loads, (const byte*)"\xb0\x05" "loads")
QDEF(MP_QSTR_locals, (const byte*)"\x3b\x06" "locals")
QDEF(MP_QSTR_localtime, (const byte*)"\x7d\x09" "localtime")
QDEF(MP_QSTR_lock, (const byte*)"\xae\x04" "lock")
QDEF(MP_QSTR_locked, (const byte*)"\x0f\x06" "locked")
QDEF(MP_QSTR_log, (const byte*)"\x21\x03" "log")
QDEF(MP_QSTR_low, (const byte*)"\x31\x03" "low")
QDEF(MP_QSTR_lower, (const byte*)"\xc6\x05" "lower")
QDEF(MP_QSTR_lstrip, (const byte*)"\xe5\x06" "lstrip")
QDEF(MP_QSTR_machine, (const byte*)"\x60\x07" "machine")
QDEF(MP_QSTR_makefile, (const byte*)"\xc1\x08" "makefile")
QDEF(MP_QSTR_map, (const byte*)"\xb9\x03" "map")
QDEF(MP_QSTR_mapper, (const byte*)"\x5e\x06" "mapper")
QDEF(MP_QSTR_mask, (const byte*)"\x91\x04" "mask")
QDEF(MP_QSTR_match, (const byte*)"\x96\x05" "match")
QDEF(MP_QSTR_math, (const byte*)"\x35\x04" "math")
QDEF(MP_QSTR_maxsize, (const byte*)"\xd4\x07" "maxsize")
QDEF(MP_QSTR_mem, (const byte*)"\x20\x03" "mem")
QDEF(MP_QSTR_mem16, (const byte*)"\x07\x05" "mem16")
QDEF(MP_QSTR_mem32, (const byte*)"\x41\x05" "mem32")
QDEF(MP_QSTR_mem8, (const byte*)"\x18\x04" "mem8")
QDEF(MP_QSTR_mem_alloc, (const byte*)"\x52\x09" "mem_alloc")
QDEF(MP_QSTR_mem_free, (const byte*)"\xcb\x08" "mem_free")
QDEF(MP_QSTR_mem_read, (const byte*)"\x8d\x08" "mem_read")
QDEF(MP_QSTR_mem_write, (const byte*)"\x62\x09" "mem_write")
QDEF(MP_QSTR_memaddr, (const byte*)"\x93\x07" "memaddr")
QDEF(MP_QSTR_memoryview, (const byte*)"\x69\x0a" "memoryview")
QDEF(MP_QSTR_micropython, (const byte*)"\x0b\x0b" "micropython")
QDEF(MP_QSTR_micros, (const byte*)"\xac\x06" "micros")
QDEF(MP_QSTR_millis, (const byte*)"\x5b\x06" "millis")
QDEF(MP_QSTR_miso, (const byte*)"\x9d\x04" "miso")
QDEF(MP_QSTR_mkdir, (const byte*)"\x9c\x05" "mkdir")
QDEF(MP_QSTR_mkfs, (const byte*)"\x76\x04" "mkfs")
QDEF(MP_QSTR_mktime, (const byte*)"\x96\x06" "mktime")
QDEF(MP_QSTR_mode, (const byte*)"\x26\x04" "mode")
QDEF(MP_QSTR_modf, (const byte*)"\x25\x04" "modf")
QDEF(MP_QSTR_modify, (const byte*)"\xf5\x06" "modify")
QDEF(MP_QSTR_module, (const byte*)"\xbf\x06" "module")
QDEF(MP_QSTR_modules, (const byte*)"\xec\x07" "modules")
QDEF(MP_QSTR_mosi, (const byte*)"\x1d\x04" "mosi")
QDEF(MP_QSTR_mount, (const byte*)"\xa8\x05" "mount")
QDEF(MP_QSTR_name, (const byte*)"\xa2\x04" "name")
QDEF(MP_QSTR_namedtuple, (const byte*)"\x1e\x0a" "namedtuple")
QDEF(MP_QSTR_names, (const byte*)"\x91\x05" "names")
QDEF(MP_QSTR_network, (const byte*)"\x5b\x07" "network")
QDEF(MP_QSTR_next, (const byte*)"\x42\x04" "next")
QDEF(MP_QSTR_nodename, (const byte*)"\x62\x08" "nodename")
QDEF(MP_QSTR_object, (const byte*)"\x90\x06" "object")
QDEF(MP_QSTR_oct, (const byte*)"\xfd\x03" "oct")
QDEF(MP_QSTR_off, (const byte*)"\x8a\x03" "off")
QDEF(MP_QSTR_on, (const byte*)"\x64\x02" "on")
QDEF(MP_QSTR_open, (const byte*)"\xd1\x04" "open")
QDEF(MP_QSTR_opt_level, (const byte*)"\x87\x09" "opt_level")
QDEF(MP_QSTR_ord, (const byte*)"\x1c\x03" "ord")
QDEF(MP_QSTR_pack, (const byte*)"\xbc\x04" "pack")
QDEF(MP_QSTR_pack_into, (const byte*)"\x1f\x09" "pack_into")
QDEF(MP_QSTR_parity, (const byte*)"\x42\x06" "parity")
QDEF(MP_QSTR_path, (const byte*)"\x88\x04" "path")
QDEF(MP_QSTR_pend_throw, (const byte*)"\xf3\x0a" "pend_throw")
QDEF(MP_QSTR_period, (const byte*)"\xa0\x06" "period")
QDEF(MP_QSTR_phase, (const byte*)"\x6a\x05" "phase")
QDEF(MP_QSTR_pi, (const byte*)"\x1c\x02" "pi")
QDEF(MP_QSTR_pid, (const byte*)"\xf8\x03" "pid")
QDEF(MP_QSTR_pin, (const byte*)"\xf2\x03" "pin")
QDEF(MP_QSTR_platform, (const byte*)"\x3a\x08" "platform")
QDEF(MP_QSTR_polar, (const byte*)"\x05\x05" "polar")
QDEF(MP_QSTR_polarity, (const byte*)"\x41\x08" "polarity")
QDEF(MP_QSTR_poll, (const byte*)"\x9a\x04" "poll")
QDEF(MP_QSTR_pop, (const byte*)"\x2a\x03" "pop")
QDEF(MP_QSTR_popitem, (const byte*)"\xbf\x07" "popitem")
QDEF(MP_QSTR_popleft, (const byte*)"\x71\x07" "popleft")
QDEF(MP_QSTR_port, (const byte*)"\x5c\x04" "port")
QDEF(MP_QSTR_pow, (const byte*)"\x2d\x03" "pow")
QDEF(MP_QSTR_prescaler, (const byte*)"\x28\x09" "prescaler")
QDEF(MP_QSTR_present, (const byte*)"\xee\x07" "present")
QDEF(MP_QSTR_print, (const byte*)"\x54\x05" "print")
QDEF(MP_QSTR_print_exception, (const byte*)"\x1c\x0f" "print_exception")
QDEF(MP_QSTR_pull, (const byte*)"\x80\x04" "pull")
QDEF(MP_QSTR_pulse_width_percent, (const byte*)"\x27\x13" "pulse_width_percent")
QDEF(MP_QSTR_pyb, (const byte*)"\xee\x03" "pyb")
QDEF(MP_QSTR_r, (const byte*)"\xd7\x01" "r")
QDEF(MP_QSTR_radians, (const byte*)"\x87\x07" "radians")
QDEF(MP_QSTR_range, (const byte*)"\x1a\x05" "range")
QDEF(MP_QSTR_read, (const byte*)"\xb7\x04" "read")
QDEF(MP_QSTR_read_buf_len, (const byte*)"\xa1\x0c" "read_buf_len")
QDEF(MP_QSTR_read_channel, (const byte*)"\xcb\x0c" "read_channel")
QDEF(MP_QSTR_read_core_temp, (const byte*)"\xe0\x0e" "read_core_temp")
QDEF(MP_QSTR_read_core_vbat, (const byte*)"\xed\x0e" "read_core_vbat")
QDEF(MP_QSTR_readblocks, (const byte*)"\x2d\x0a" "readblocks")
QDEF(MP_QSTR_readchar, (const byte*)"\xef\x08" "readchar")
QDEF(MP_QSTR_readfrom, (const byte*)"\x41\x08" "readfrom")
QDEF(MP_QSTR_readfrom_into, (const byte*)"\x82\x0d" "readfrom_into")
QDEF(MP_QSTR_readfrom_mem, (const byte*)"\x3b\x0c" "readfrom_mem")
QDEF(MP_QSTR_readfrom_mem_into, (const byte*)"\x38\x11" "readfrom_mem_into")
QDEF(MP_QSTR_readinto, (const byte*)"\x4b\x08" "readinto")
QDEF(MP_QSTR_readline, (const byte*)"\xf9\x08" "readline")
QDEF(MP_QSTR_readlines, (const byte*)"\x6a\x09" "readlines")
QDEF(MP_QSTR_readonly, (const byte*)"\x03\x08" "readonly")
QDEF(MP_QSTR_real, (const byte*)"\xbf\x04" "real")
QDEF(MP_QSTR_rect, (const byte*)"\xe5\x04" "rect")
QDEF(MP_QSTR_recv, (const byte*)"\xe7\x04" "recv")
QDEF(MP_QSTR_recv_packet_size, (const byte*)"\x6a\x10" "recv_packet_size")
QDEF(MP_QSTR_recvfrom, (const byte*)"\x91\x08" "recvfrom")
QDEF(MP_QSTR_reg, (const byte*)"\x75\x03" "reg")
QDEF(MP_QSTR_register, (const byte*)"\xac\x08" "register")
QDEF(MP_QSTR_release, (const byte*)"\xec\x07" "release")
QDEF(MP_QSTR_remove, (const byte*)"\x63\x06" "remove")
QDEF(MP_QSTR_rename, (const byte*)"\x35\x06" "rename")
QDEF(MP_QSTR_replace, (const byte*)"\x49\x07" "replace")
QDEF(MP_QSTR_repr, (const byte*)"\xd0\x04" "repr")
QDEF(MP_QSTR_restart, (const byte*)"\xb2\x07" "restart")
QDEF(MP_QSTR_reverse, (const byte*)"\x25\x07" "reverse")
QDEF(MP_QSTR_rfind, (const byte*)"\xd2\x05" "rfind")
QDEF(MP_QSTR_rindex, (const byte*)"\xe9\x06" "rindex")
QDEF(MP_QSTR_rmdir, (const byte*)"\x45\x05" "rmdir")
QDEF(MP_QSTR_rng, (const byte*)"\x9e\x03" "rng")
QDEF(MP_QSTR_round, (const byte*)"\xe7\x05" "round")
QDEF(MP_QSTR_rsplit, (const byte*)"\xa5\x06" "rsplit")
QDEF(MP_QSTR_rstrip, (const byte*)"\x3b\x06" "rstrip")
QDEF(MP_QSTR_rtr, (const byte*)"\x51\x03" "rtr")
QDEF(MP_QSTR_rxcallback, (const byte*)"\x86\x0a" "rxcallback")
QDEF(MP_QSTR_scan, (const byte*)"\x1a\x04" "scan")
QDEF(MP_QSTR_schedule, (const byte*)"\xe0\x08" "schedule")
QDEF(MP_QSTR_sck, (const byte*)"\xfe\x03" "sck")
QDEF(MP_QSTR_scl, (const byte*)"\xf9\x03" "scl")
QDEF(MP_QSTR_sda, (const byte*)"\x53\x03" "sda")
QDEF(MP_QSTR_search, (const byte*)"\xab\x06" "search")
QDEF(MP_QSTR_seek, (const byte*)"\x9d\x04" "seek")
QDEF(MP_QSTR_select, (const byte*)"\x8d\x06" "select")
QDEF(MP_QSTR_send, (const byte*)"\xb9\x04" "send")
QDEF(MP_QSTR_send_packet_size, (const byte*)"\x34\x10" "send_packet_size")
QDEF(MP_QSTR_sendall, (const byte*)"\x38\x07" "sendall")
QDEF(MP_QSTR_sendto, (const byte*)"\x22\x06" "sendto")
QDEF(MP_QSTR_sep, (const byte*)"\x23\x03" "sep")
QDEF(MP_QSTR_setattr, (const byte*)"\xd4\x07" "setattr")
QDEF(MP_QSTR_setblocking, (const byte*)"\x6e\x0b" "setblocking")
QDEF(MP_QSTR_setdefault, (const byte*)"\x6c\x0a" "setdefault")
QDEF(MP_QSTR_setfilter, (const byte*)"\xc7\x09" "setfilter")
QDEF(MP_QSTR_setinterrupt, (const byte*)"\xc0\x0c" "setinterrupt")
QDEF(MP_QSTR_setsockopt, (const byte*)"\x38\x0a" "setsockopt")
QDEF(MP_QSTR_settimeout, (const byte*)"\xdc\x0a" "settimeout")
QDEF(MP_QSTR_sha256, (const byte*)"\x2e\x06" "sha256")
QDEF(MP_QSTR_sin, (const byte*)"\xb1\x03" "sin")
QDEF(MP_QSTR_sizeof, (const byte*)"\x49\x06" "sizeof")
QDEF(MP_QSTR_sleep, (const byte*)"\xea\x05" "sleep")
QDEF(MP_QSTR_sleep_ms, (const byte*)"\x0b\x08" "sleep_ms")
QDEF(MP_QSTR_sleep_us, (const byte*)"\x13\x08" "sleep_us")
QDEF(MP_QSTR_socket, (const byte*)"\x60\x06" "socket")
QDEF(MP_QSTR_sort, (const byte*)"\xbf\x04" "sort")
QDEF(MP_QSTR_sorted, (const byte*)"\x5e\x06" "sorted")
QDEF(MP_QSTR_source_freq, (const byte*)"\x47\x0b" "source_freq")
QDEF(MP_QSTR_split, (const byte*)"\xb7\x05" "split")
QDEF(MP_QSTR_sqrt, (const byte*)"\x21\x04" "sqrt")
QDEF(MP_QSTR_stack_size, (const byte*)"\x31\x0a" "stack_size")
QDEF(MP_QSTR_start, (const byte*)"\x85\x05" "start")
QDEF(MP_QSTR_start_new_thread, (const byte*)"\xd7\x10" "start_new_thread")
QDEF(MP_QSTR_startswith, (const byte*)"\x74\x0a" "startswith")
QDEF(MP_QSTR_stat, (const byte*)"\xd7\x04" "stat")
QDEF(MP_QSTR_state, (const byte*)"\xd2\x05" "state")
QDEF(MP_QSTR_staticmethod, (const byte*)"\x62\x0c" "staticmethod")
QDEF(MP_QSTR_status, (const byte*)"\x71\x06" "status")
QDEF(MP_QSTR_statvfs, (const byte*)"\x14\x07" "statvfs")
QDEF(MP_QSTR_stderr, (const byte*)"\xa3\x06" "stderr")
QDEF(MP_QSTR_stdin, (const byte*)"\x21\x05" "stdin")
QDEF(MP_QSTR_stdout, (const byte*)"\x08\x06" "stdout")
QDEF(MP_QSTR_step, (const byte*)"\x57\x04" "step")
QDEF(MP_QSTR_stop, (const byte*)"\x9d\x04" "stop")
QDEF(MP_QSTR_str, (const byte*)"\x50\x03" "str")
QDEF(MP_QSTR_strip, (const byte*)"\x29\x05" "strip")
QDEF(MP_QSTR_struct, (const byte*)"\x12\x06" "struct")
QDEF(MP_QSTR_sum, (const byte*)"\x2e\x03" "sum")
QDEF(MP_QSTR_super, (const byte*)"\xc4\x05" "super")
QDEF(MP_QSTR_sync, (const byte*)"\xa2\x04" "sync")
QDEF(MP_QSTR_sys, (const byte*)"\xbc\x03" "sys")
QDEF(MP_QSTR_sysname, (const byte*)"\x9b\x07" "sysname")
QDEF(MP_QSTR_tan, (const byte*)"\xfe\x03" "tan")
QDEF(MP_QSTR_tell, (const byte*)"\x14\x04" "tell")
QDEF(MP_QSTR_throw, (const byte*)"\xb3\x05" "throw")
QDEF(MP_QSTR_ticks_add, (const byte*)"\x9d\x09" "ticks_add")
QDEF(MP_QSTR_ticks_cpu, (const byte*)"\x1a\x09" "ticks_cpu")
QDEF(MP_QSTR_ticks_diff, (const byte*)"\xb1\x0a" "ticks_diff")
QDEF(MP_QSTR_ticks_ms, (const byte*)"\x42\x08" "ticks_ms")
QDEF(MP_QSTR_ticks_us, (const byte*)"\x5a\x08" "ticks_us")
QDEF(MP_QSTR_time, (const byte*)"\xf0\x04" "time")
QDEF(MP_QSTR_timeout, (const byte*)"\x3e\x07" "timeout")
QDEF(MP_QSTR_timeout_char, (const byte*)"\x79\x0c" "timeout_char")
QDEF(MP_QSTR_to_bytes, (const byte*)"\xd8\x08" "to_bytes")
QDEF(MP_QSTR_toggle, (const byte*)"\xb7\x06" "toggle")
QDEF(MP_QSTR_trigger, (const byte*)"\x9d\x07" "trigger")
QDEF(MP_QSTR_trunc, (const byte*)"\x5b\x05" "trunc")
QDEF(MP_QSTR_tuple, (const byte*)"\xfd\x05" "tuple")
QDEF(MP_QSTR_type, (const byte*)"\x9d\x04" "type")
QDEF(MP_QSTR_ubinascii, (const byte*)"\xc4\x09" "ubinascii")
QDEF(MP_QSTR_ucollections, (const byte*)"\x15\x0c" "ucollections")
QDEF(MP_QSTR_uctypes, (const byte*)"\xf8\x07" "uctypes")
QDEF(MP_QSTR_udelay, (const byte*)"\x25\x06" "udelay")
QDEF(MP_QSTR_uerrno, (const byte*)"\xb4\x06" "uerrno")
QDEF(MP_QSTR_uhashlib, (const byte*)"\x65\x08" "uhashlib")
QDEF(MP_QSTR_uheapq, (const byte*)"\x1d\x06" "uheapq")
QDEF(MP_QSTR_uio, (const byte*)"\xb6\x03" "uio")
QDEF(MP_QSTR_ujson, (const byte*)"\xe8\x05" "ujson")
QDEF(MP_QSTR_umachine, (const byte*)"\x95\x08" "umachine")
QDEF(MP_QSTR_umount, (const byte*)"\xdd\x06" "umount")
QDEF(MP_QSTR_uname, (const byte*)"\xb7\x05" "uname")
QDEF(MP_QSTR_unhexlify, (const byte*)"\xb1\x09" "unhexlify")
QDEF(MP_QSTR_unlink, (const byte*)"\xfe\x06" "unlink")
QDEF(MP_QSTR_unpack, (const byte*)"\x07\x06" "unpack")
QDEF(MP_QSTR_unpack_from, (const byte*)"\x0e\x0b" "unpack_from")
QDEF(MP_QSTR_unregister, (const byte*)"\x17\x0a" "unregister")
QDEF(MP_QSTR_uos, (const byte*)"\xec\x03" "uos")
QDEF(MP_QSTR_update, (const byte*)"\xb4\x06" "update")
QDEF(MP_QSTR_upper, (const byte*)"\x27\x05" "upper")
QDEF(MP_QSTR_urandom, (const byte*)"\xab\x07" "urandom")
QDEF(MP_QSTR_ure, (const byte*)"\x87\x03" "ure")
QDEF(MP_QSTR_usb_mode, (const byte*)"\xbd\x08" "usb_mode")
QDEF(MP_QSTR_uselect, (const byte*)"\x58\x07" "uselect")
QDEF(MP_QSTR_usocket, (const byte*)"\x75\x07" "usocket")
QDEF(MP_QSTR_ustruct, (const byte*)"\x47\x07" "ustruct")
QDEF(MP_QSTR_utime, (const byte*)"\xe5\x05" "utime")
QDEF(MP_QSTR_uzlib, (const byte*)"\x6d\x05" "uzlib")
QDEF(MP_QSTR_value, (const byte*)"\x4e\x05" "value")
QDEF(MP_QSTR_values, (const byte*)"\x7d\x06" "values")
QDEF(MP_QSTR_version, (const byte*)"\xbf\x07" "version")
QDEF(MP_QSTR_version_info, (const byte*)"\x6e\x0c" "version_info")
QDEF(MP_QSTR_vid, (const byte*)"\xfe\x03" "vid")
QDEF(MP_QSTR_wfi, (const byte*)"\x9d\x03" "wfi")
QDEF(MP_QSTR_write, (const byte*)"\x98\x05" "write")
QDEF(MP_QSTR_write_readinto, (const byte*)"\x89\x0e" "write_readinto")
QDEF(MP_QSTR_writeblocks, (const byte*)"\x02\x0b" "writeblocks")
QDEF(MP_QSTR_writechar, (const byte*)"\x40\x09" "writechar")
QDEF(MP_QSTR_writeto, (const byte*)"\x03\x07" "writeto")
QDEF(MP_QSTR_writeto_mem, (const byte*)"\x79\x0b" "writeto_mem")
QDEF(MP_QSTR_zip, (const byte*)"\xe6\x03" "zip")
